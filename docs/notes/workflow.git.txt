# #############################################################################
# Analyzing commits
# #############################################################################

* Show files modified in a commit
- You can see the files modified in a given commit hash with:
    ```bash
    > git show --name-only $HASH
    ```

- E.g.,

    ```bash
    > git show --name-only 39a9e335298a3fe604896fa19296d20829801cf2

    commit 39a9e335298a3fe604896fa19296d20829801cf2
    Author: Julia <julia@particle.one>
    Date:   Fri Sep 27 11:43:41 2019

        PartTask274 lint

    vendors/cme/utils.py
    vendors/first_rate/utils.py
    ```

# #############################################################################
# Branch
# #############################################################################

* Naming a branch

- You can get automatically the name of a branch corresponding to a GitHub issue
  with:
    ```bash
    > ghi_show.py 274 --only_github
    > ghi_show.py 274 -r ParticleDev/commodity_research --only_github
    # Github:
    #274: PRICE: Download equity data
    https://github.com/alphamatic/lemonade/issues/274

    # Tag:
    LemTask274_PRICE_Download_equity_data
    ```

* Checking what work was done in a branch

- Look at all the branches available:
    ```bash
    > git fetch
    > git branch -r
      origin/HEAD -> origin/master
      origin/PartTask274
      ...
    ```

- Go to the branch:
    ```bash
    > git checkout PartTask274
    ```
- Check what are the commits that are in the current branch but not in master:
    ```bash
    > gll master..HEAD
    > git log master..HEAD
    * eb12233 Julia     PartTask274 verify dataset integrity                    (  13 hours ago) Sat Sep 28 18:55:12 2019  (HEAD -> PartTask274, origin/PartTask274)
    ...
    * a637594 saggese   PartTask274: Add tag for review                         (    3 days ago) Thu Sep 26 17:13:33 2019
    ```

- To see the actual changes in a branch you can't do:
    **Bad**
    ```bash
    > git diff master..HEAD
    ```
  since `git diff` compares two commits and not a range of commits like `git log`
  (yes, Git has a horrible API)

- What you need to do is to get the first commit in the branch and the last from
  `git log` and compare them:
    ```bash
    > git difftool a637594..eb12233
    > gd a637594..eb12233
    ```

* Compare a directory among branches

- This is useful if we want to focus on changes on a single dir
    ```bash
    > git ll master..PartTask274 vendors/cme

    * 39a9e33 Julia     PartTask274 lint                                                  (    2 days ago) Fri Sep 27 11:43:41 2019
    * c8e7e1a Julia     PartTask268 modify according to review16                          (    2 days ago) Fri Sep 27 11:41:47 2019
    * a637594 saggese   PartTask274: Add tag for review                                   (    3 days ago) Thu Sep 26 17:13:33 2019
    ```

    ```bash
    > git diff --name-only a637594..33a46b2 -- vendors helpers
    helpers/csv.py
    vendors/cme/utils.py
    vendors/first_rate/Task274_verify_datasets.ipynb
    vendors/first_rate/Task274_verify_datasets.py
    vendors/first_rate/reader.py
    vendors/first_rate/utils.py
    vendors/test/test_vendors.py
    ```
