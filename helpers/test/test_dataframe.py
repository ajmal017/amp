import collections
import logging

import numpy as np
import pandas as pd

import helpers.dataframe as hdf
import helpers.printing as prnt
import helpers.unit_test as hut

_LOG = logging.getLogger(__name__)


class Test_filter_data_by_values1(hut.TestCase):
    def test_conjunction1(self) -> None:
        data = pd.DataFrame([[1, 2, 3], [4, 5, 6]])
        data = data.add_prefix("col_")
        filters = {"col_0": (1, 12), "col_1": (2, 11), "col_2": (3, 6)}
        info: collections.OrderedDict = collections.OrderedDict()
        filtered_data = hdf.filter_data_by_values(data, filters, "and", info)
        str_output = (
            f"{prnt.frame('data')}\n"
            f"{hut.convert_df_to_string(data, index=True)}\n"
            f"{prnt.frame('filters')}\n{filters}\n"
            f"{prnt.frame('filtered_data')}\n"
            f"{hut.convert_df_to_string(filtered_data, index=True)}\n"
            f"{hut.convert_info_to_string(info)}"
        )
        self.check_string(str_output)

    def test_disjunction1(self) -> None:
        data = pd.DataFrame([[1, 2, 3], [4, 5, 6]])
        data = data.add_prefix("col_")
        filters = {"col_0": (1, 12), "col_1": (2, 11), "col_2": (3, 6)}
        info: collections.OrderedDict = collections.OrderedDict()
        filtered_data = hdf.filter_data_by_values(data, filters, "or", info)
        str_output = (
            f"{prnt.frame('data')}\n"
            f"{hut.convert_df_to_string(data, index=True)}\n"
            f"{prnt.frame('filters')}\n{filters}\n"
            f"{prnt.frame('filtered_data')}"
            f"\n{hut.convert_df_to_string(filtered_data, index=True)}\n"
            f"{hut.convert_info_to_string(info)}"
        )
        self.check_string(str_output)


class Test_filter_data_by_comparison(hut.TestCase):
    def test_conjunction1(self) -> None:
        data = pd.DataFrame([[1, 2, 3], [4, 5, 6], [7, 8, 9], [10, 11, 12]])
        data = data.add_prefix("col_")
        filters = {"col_0": (("gt", 1), ("lt", 7)), "col_1": ("eq", 5)}
        info: collections.OrderedDict = collections.OrderedDict()
        filtered_data = hdf.filter_data_by_comparison(data, filters, "and", info)
        str_output = (
            f"{prnt.frame('data')}\n"
            f"{hut.convert_df_to_string(data, index=True)}\n"
            f"{prnt.frame('filters')}\n{filters}\n"
            f"{prnt.frame('filtered_data')}\n"
            f"{hut.convert_df_to_string(filtered_data, index=True)}\n"
            f"{hut.convert_info_to_string(info)}"
        )
        self.check_string(str_output)

    def test_disjunction1(self) -> None:
        data = pd.DataFrame([[1, 2, 3], [4, 5, 6], [7, 8, 9], [10, 11, 12]])
        data = data.add_prefix("col_")
        filters = {"col_0": ("gt", 2), "col_1": ("eq", 5)}
        info: collections.OrderedDict = collections.OrderedDict()
        filtered_data = hdf.filter_data_by_comparison(data, filters, "or", info)
        str_output = (
            f"{prnt.frame('data')}\n"
            f"{hut.convert_df_to_string(data, index=True)}\n"
            f"{prnt.frame('filters')}\n{filters}\n"
            f"{prnt.frame('filtered_data')}"
            f"\n{hut.convert_df_to_string(filtered_data, index=True)}\n"
            f"{hut.convert_info_to_string(info)}"
        )
        self.check_string(str_output)


class TestFilterDataByMethod(hut.TestCase):
    """This test was generated automatically with Playback."""

    def test1(self) -> None:
        # Define input variables
        data = pd.DataFrame.from_dict(
            {
                "Name": [
                    "Coal and coke CO2 emissions – Aruba – million metric tonnes carbon dioxide",
                    "Coal and coke CO2 emissions – Albania – million metric tonnes carbon dioxide",
                    "Coal and coke CO2 emissions – United Arab Emirates – million metric tonnes carbon dioxide",
                    "Coal and coke CO2 emissions – Argentina – million metric tonnes carbon dioxide",
                    "Coal and coke CO2 emissions – Armenia – million metric tonnes carbon dioxide",
                    "Germany: Term  Structure  of  Interest  Rate  on  Listed  Federal  Securities: 1",
                    "Germany: Term  Structure  of  Interest  Rate  on  Listed  Federal  Securities: 10",
                    "France: Treasury  Bills  Reference  Rate: 1Y",
                    "France: Treasury  Bills  Reference  Rate: 10Y",
                    "Spain: Government  Securities  Yields: 12M",
                    "Spain: Government  Securities  Yields: 10Y",
                    "Italy: Government  Securities  Yields: 3Y_",
                    "Italy: Government  Securities  Yields: 10",
                    "Futures  Closing  Price (Active  Contract): Gold",
                    "Futures  Settlement  Price (Continuous  3M): Gold",
                    "Futures  Closing  Price (Continuous): Gold",
                    "Futures  Closing  Price (Continuous  3M): Gold",
                    "Futures  Settlement  Price (Active  Contract): Gold",
                    "Futures  Trading  Volume: Gold",
                    "Futures  Turnover: Gold",
                    "Futures  Position: Gold",
                    "Futures  Trading  Volume (Active  Contract): Gold",
                    "Futures  Position (Active  Contract): Gold",
                    "Closing  Stock  on  Warrant: Gold",
                    "Duplicate) Closing  Stock  on  Warrant: Gold: Total",
                    "Futures  Closing  Price (Continuous): COMEX  Gold",
                    "Futures  Closing  Price (Active  Contract}: COMEX  Gold)",
                    "Futures  Closing  Price (Continuous): COMEX  Mini  Gold",
                    "Futures  Settlement  Price (Active  Contract}: COMEX  Gold)",
                    "Futures  Closing  Price (Active  Contract: COMEX  Mini  Gold)",
                    "Futures  Settlement  Price (Active  Contract}: COMEX  Mini  Gold)",
                    "Futures  Trading  Volume (Active  Contract): COMEX  Gold",
                    "Futures  Position (Active  Contract): COMEX  Gold",
                    "COMEX: Silver: Inventory",
                    "SGE  Gold: Closing  Price: Au9995",
                    "SGE  Gold: Closing  Price: Au9999",
                    "SGE  Gold: Closing  Price: Au100G",
                    "SGE  Gold: Closing  Price: AuT+D",
                    "SGE  Gold: Settlement  Price: Au (T+D)",
                    "SGE  Gold: Volume: Au9995",
                    "SGE  Gold: Volume: Au9999",
                    "SGE  Gold: Volume: Au100g",
                    "SGE  Gold: Volume: AuT+D",
                    "SGE  Gold: Position: Au (T+D)",
                    "SGE  Gold: Deferred  Payment  of  Direction: Au (T+D)",
                    "SGE  Gold: Delivery  Volume: Au (T+D)",
                    "Loco  London  Gold: In  USD",
                    "Loco  Londen  Gold: In  EUR",
                    "Loco  Londen  Gold: In  GBP",
                    "Closing  Price: Paper  Gold: Bank  of  China",
                    "Closing  Price: Paper  Gold: China  Construction  Bank",
                    "Closing  Price: Paper  Gold: Industrial  and  Commercial  Bank  of  China",
                    "Price: Gold: 99.95",
                    "Price: Gold: 99.99",
                    "SPDR  Gold  Shares: Total  Net  Asset  Value  Qunces  in  the  Trust",
                    "SPDR  Gold  Shares: Total  Net  Asset  Value  Tonnes  in  the  Trust",
                    "SPDR  Gold  Shares: Total  Net  Asset  Value  in  the  Trust",
                    "iShares: SPDR  Gold  Shares: Total  Net  Asset  Value  in  the  Trust",
                    "iShares: SPDR  Gold  Shares: Total  Net  Asset  Value oz.t in  the  Trust",
                    "iShares: SPDR  Gold  Shares: Total  Net  Asset  Value  Tonnes  in  the  Trust",
                    "GBS: SPDR  Gold  Shares: Total  Net  Asset  Value  in  the  Trust",
                    "GBS: SPDR  Gold  Shares: Total  Net  Asset  Value oz.t in  the  Trust",
                    "GBS: SPDR  Gold  Shares: Total  Net  Asset  Value  Tonnes  in  the  Trust",
                    "PHAU: SPDR  Gold  Shares: Total  Net  Asset  Value  in  the  Trust",
                    "PHAU: SPDR  Gold  Shares: Total  Net  Asset  Value oz.t in  the  Trust",
                    "PHAU: SPDR  Gold  Shares: Total  Net  Asset  Value  Tonnes  in  the  Trust",
                    "SGBS: SPDR  Gold  Shares: Total  Net  Asset  Value  in  the  Trust",
                    "SGBS: SPDR  Gold  Shares: Total  Net  Asset  Value oz.t in  the  Trust",
                    "SGBS: SPDR  Gold  Shares: Total  Net  Asset  Value  Tonnes  in  the  Trust",
                    "GOLD: SPDR  Gold  Shares: Total  Net  Asset  Value  in  the  Trust",
                    "GOLD: SPDR  Gold  Shares: Total  Net  Asset  Value oz.t in  the  Trust",
                    "GOLD: SPDR  Gold  Shares: Total  Net  Asset  Value  Tonnes  in  the  Trust",
                    "SGOL: SPDR  Gold  Shares: Total  Net  Asset  Value  in  the  Trust",
                    "SGOL: SPDR  Gold  Shares: Total  Net  Asset  Value oz.t in  the  Trust",
                    "SGOL: SPDR  Gold  Shares: Total  Net  Asset  Value  Tonnes  in  the  Trust",
                    "Price: Chinese  Major  Ports  FOB: Silicon: 98.5",
                    "Price: Silicon  Powder: -200 Mesh,-300 Mesh: Shanghai-made",
                    "Market  Price: Secondary  Metallurgical  Coke: National",
                    "Ex-factory Price (Tax-inclusive): Metallurgical  Coke  Grade  3 (A15%,0.6%): Yunng",
                    "Ex-factory Price (Tax-inclusive): Secondary  Metallurgical  Coke: Rizhao",
                    "Ex-factory Price (Tax-inclusive): Secondary  Metallurgical  Coke: Zibo",
                    "Ex-factory Price (Tax-inclusive): Secondary  Metallurgical  Coke: Yinchuan",
                    "Ex-factory Price (Tax-inclusive): Secondary  Metallurgical  Coke: Xinjiang  County",
                    "Ex-factory Price (Tax-inclusive): Secondary  Metallurgical  Coke: Xuzhou",
                    "Exit  Price (Tax-inclusive): Secondary  Metallurgical  Coke: Tianjin",
                    "Ex-factory Price (Tax-inclusive): Secondary  Metallurgical  Coke: Shuangyashan",
                    "Price  to  Factory (Tax-inclusive): Secondary  Metallurgical  Coke: Shijiazhuang",
                    "Price  to  Factory (Tax-inclusive): Secondary  Metallurgical  Coke: Shanghai",
                    "Ex-factory Price (Tax-inclusive): Secondary  Metallurgical  Coke: Qigihar",
                    "Ex-factory Price (Tax-inclusive): Secondary  Metallurgical  Coke: Panzhihua",
                    "Ex-factory Price (Tax-inclusive): Secondary  Metallurgical  Coke: Mudanjlang",
                    "Ex-factory Price (Tax-inclusive): Secondary  Metallurgical  Coke: Lvliang",
                    "Ex-factory Price (Tax-inclusive): Secondary  Metallurgical  Coke: Linyt",
                    "Ex-factory Price (Tax-inclusive): Secondary  Metallurgical  Coke: Linfen",
                    "Ex-factory Price (Tax-inclusive): Secondary  Metallurgical  Coke: Jinzhong",
                    "Ex-factory Price (Tax-inclusive): Secondary  Metallurgical  Coke: Hancheng",
                    "Ex-factory Price (Tax-inclusive): Secondary  Metallurgical  Coke: Fukang",
                    "Price  to  Factory (Tax-inclusive): Secondary  Metallurgical  Coke: Fushun",
                    "Ex-factory Price (Tax-inclusive): Secondary  Metallurgical  Coke: Ordos",
                    "Ex-factory Price (Tax-inclusive): Secondary  Metallurgical  Coke: Anyang",
                ],
                "Frequency": [
                    "Annual",
                    "Annual",
                    "Annual",
                    "Annual",
                    "Annual",
                    "Daily",
                    "Daily",
                    "Daily",
                    "Daily",
                    "Daily",
                    "Daily",
                    "Daily",
                    "Daily",
                    "Daily",
                    "Daily",
                    "Daily",
                    "Daily",
                    "Daily",
                    "Daily",
                    "Daily",
                    "Daily",
                    "Daily",
                    "Daily",
                    "Daily",
                    "Daily",
                    "Daily",
                    "Daily",
                    "Daily",
                    "Daily",
                    "Daily",
                    "Daily",
                    "Daily",
                    "Daily",
                    "Daily",
                    "Daily",
                    "Daily",
                    "Daily",
                    "Daily",
                    "Daily",
                    "Daily",
                    "Daily",
                    "Daily",
                    "Daily",
                    "Daily",
                    "Daily",
                    "Daily",
                    "Daily",
                    "Daily",
                    "Daily",
                    "Daily",
                    "Daily",
                    "Daily",
                    "Daily",
                    "Daily",
                    "Daily",
                    "Daily",
                    "Daily",
                    "Daily",
                    "Daily",
                    "Daily",
                    "Daily",
                    "Daily",
                    "Daily",
                    "Daily",
                    "Daily",
                    "Daily",
                    "Daily",
                    "Daily",
                    "Daily",
                    "Daily",
                    "Daily",
                    "Daily",
                    "Daily",
                    "Daily",
                    "Daily",
                    "Daily",
                    "Daily",
                    "Daily",
                    "Daily",
                    "Daily",
                    "Daily",
                    "Daily",
                    "Daily",
                    "Daily",
                    "Daily",
                    "Daily",
                    "Daily",
                    "Daily",
                    "Daily",
                    "Daily",
                    "Daily",
                    "Daily",
                    "Daily",
                    "Daily",
                    "Daily",
                    "Daily",
                    "Daily",
                    "Daily",
                    "Daily",
                    "Daily",
                ],
                "Country": [
                    "Aruba",
                    "Albania",
                    "United Arab Emirates",
                    "Argentina",
                    "Armenia",
                    "Germany",
                    "Germany",
                    "France",
                    "France",
                    "Spain",
                    "Spain",
                    "Italy",
                    "Italy",
                    "China",
                    "China",
                    "China",
                    "China",
                    "China",
                    "China",
                    "China",
                    "China",
                    "China",
                    "China",
                    "China",
                    "China",
                    "United States",
                    "United States",
                    "United States",
                    "United States",
                    "United States",
                    "United States",
                    "United States",
                    "United States",
                    "United States",
                    "China",
                    "China",
                    "China",
                    "China",
                    "China",
                    "China",
                    "China",
                    "China",
                    "China",
                    "China",
                    "China",
                    "China",
                    "United Kingdom",
                    "United Kingdom",
                    "United Kingdom",
                    "China",
                    "China",
                    "China",
                    "China",
                    "China",
                    "United States",
                    "United States",
                    "United States",
                    "United States",
                    "United States",
                    "United States",
                    "United Kingdom",
                    "United Kingdom",
                    "United Kingdom",
                    "United Kingdom",
                    "United Kingdom",
                    "United Kingdom",
                    "Switzerland",
                    "Switzerland",
                    "Switzerland",
                    "United Kingdom",
                    "United Kingdom",
                    "United Kingdom",
                    "Switzerland",
                    "Switzerland",
                    "Switzerland",
                    "United Kingdom",
                    "China",
                    "China",
                    "China",
                    "China",
                    "China",
                    "China",
                    "China",
                    "China",
                    "China",
                    "China",
                    "China",
                    "China",
                    "China",
                    "China",
                    "China",
                    "China",
                    "China",
                    "China",
                    "China",
                    "China",
                    "China",
                    "China",
                    "China",
                    "China",
                ],
                "Unit": [
                    "kw, in millions",
                    "kw, in millions",
                    "kw, in millions",
                    "kw, in millions",
                    "kw, in millions",
                    "%",
                    "%",
                    "%",
                    "%",
                    "%",
                    "%",
                    "%",
                    "%",
                    "yuan/g",
                    "yuan/g",
                    "yuan/g",
                    "yuan/g",
                    "yuan/g",
                    "lots",
                    "CNY, in 10,000s",
                    "lots",
                    "lots",
                    "lots",
                    "kg",
                    "kg",
                    "USD/ounce",
                    "USD/ounce",
                    "USD/ounce",
                    "USD/ounce",
                    "USD/ounce",
                    "USD/ounce",
                    "lots",
                    "lots",
                    "ozt",
                    "yuan/g",
                    "yuan/g",
                    "yuan/g",
                    "yuan/g",
                    "yuan/g",
                    "kg",
                    "kg",
                    "kg",
                    "kg",
                    "kg",
                    np.nan,
                    "kg",
                    "USD/ounce",
                    "EUR/ounce",
                    "GBP/ounce",
                    "yuan/g",
                    "yuan/g",
                    "yuan/g",
                    "yuan/g",
                    "yuan/g",
                    "ozt",
                    "tons",
                    "USD",
                    "USD",
                    "ozt",
                    "tons",
                    "USD",
                    "ozt",
                    "tons",
                    "USD",
                    "ozt",
                    "tons",
                    "USD",
                    "ozt",
                    "tons",
                    "AUD",
                    "ozt",
                    "tons",
                    "USD",
                    "ozt",
                    "tons",
                    "USD/ton",
                    "yuan/kg",
                    "yuan/ton",
                    "yuan/ton",
                    "yuan/ton",
                    "yuan/ton",
                    "yuan/ton",
                    "yuan/ton",
                    "yuan/ton",
                    "yuan/ton",
                    "yuan/ton",
                    "yuan/ton",
                    "yuan/ton",
                    "yuan/ton",
                    "yuan/ton",
                    "yuan/ton",
                    "yuan/ton",
                    "yuan/ton",
                    "yuan/ton",
                    "yuan/ton",
                    "yuan/ton",
                    "yuan/ton",
                    "yuan/ton",
                    "yuan/ton",
                    "yuan/ton",
                ],
                "Start Date": [
                    pd.NaT,
                    pd.NaT,
                    pd.NaT,
                    pd.NaT,
                    pd.NaT,
                    pd.Timestamp("1997-08-07 00:00:00"),
                    pd.Timestamp("1997-08-07 00:00:00"),
                    pd.Timestamp("1989-01-03 00:00:00"),
                    pd.Timestamp("1987-01-02 00:00:00"),
                    pd.Timestamp("1987-07-01 00:00:00"),
                    pd.Timestamp("1989-07-18 00:00:00"),
                    pd.Timestamp("1989-07-24 00:00:00"),
                    pd.Timestamp("1991-03-05 00:00:00"),
                    pd.Timestamp("2008-01-09 00:00:00"),
                    pd.Timestamp("2008-01-09 00:00:00"),
                    pd.Timestamp("2008-01-09 00:00:00"),
                    pd.Timestamp("2008-01-09 00:00:00"),
                    pd.Timestamp("2008-01-09 00:00:00"),
                    pd.Timestamp("2008-01-09 00:00:00"),
                    pd.Timestamp("2008-01-09 00:00:00"),
                    pd.Timestamp("2008-01-09 00:00:00"),
                    pd.Timestamp("2008-01-09 00:00:00"),
                    pd.Timestamp("2008-01-09 00:00:00"),
                    pd.Timestamp("2008-01-11 00:00:00"),
                    pd.Timestamp("2008-01-11 00:00:00"),
                    pd.Timestamp("1975-01-02 00:00:00"),
                    pd.Timestamp("2010-04-13 00:00:00"),
                    pd.Timestamp("2010-12-06 00:00:00"),
                    pd.Timestamp("2010-04-13 00:00:00"),
                    pd.Timestamp("2013-01-03 00:00:00"),
                    pd.Timestamp("2013-01-03 00:00:00"),
                    pd.Timestamp("2010-04-13 00:00:00"),
                    pd.Timestamp("2010-04-13 00:00:00"),
                    pd.Timestamp("1992-09-01 00:00:00"),
                    pd.Timestamp("2002-10-30 00:00:00"),
                    pd.Timestamp("2002-10-30 00:00:00"),
                    pd.Timestamp("2006-12-25 00:00:00"),
                    pd.Timestamp("2004-09-27 00:00:00"),
                    pd.Timestamp("2004-09-27 00:00:00"),
                    pd.Timestamp("2002-10-30 00:00:00"),
                    pd.Timestamp("2002-10-30 00:00:00"),
                    pd.Timestamp("2006-12-25 00:00:00"),
                    pd.Timestamp("2004-09-27 00:00:00"),
                    pd.Timestamp("2008-08-11 00:00:00"),
                    pd.Timestamp("2008-08-22 00:00:00"),
                    pd.Timestamp("2008-08-22 00:00:00"),
                    pd.Timestamp("1968-01-02 00:00:00"),
                    pd.Timestamp("1999-01-04 00:00:00"),
                    pd.Timestamp("1968-01-02 00:00:00"),
                    pd.Timestamp("2011-01-20 00:00:00"),
                    pd.Timestamp("2011-01-20 00:00:00"),
                    pd.Timestamp("2011-01-20 00:00:00"),
                    pd.Timestamp("2007-01-04 00:00:00"),
                    pd.Timestamp("2007-01-04 00:00:00"),
                    pd.Timestamp("2004-11-18 00:00:00"),
                    pd.Timestamp("2004-11-18 00:00:00"),
                    pd.Timestamp("2004-11-18 00:00:00"),
                    pd.Timestamp("2005-01-28 00:00:00"),
                    pd.Timestamp("2005-01-28 00:00:00"),
                    pd.Timestamp("2005-01-28 00:00:00"),
                    pd.Timestamp("2004-04-01 00:00:00"),
                    pd.Timestamp("2007-12-31 00:00:00"),
                    pd.Timestamp("2007-12-31 00:00:00"),
                    pd.Timestamp("2007-04-25 00:00:00"),
                    pd.Timestamp("2007-04-24 00:00:00"),
                    pd.Timestamp("2007-04-24 00:00:00"),
                    pd.Timestamp("2009-12-17 00:00:00"),
                    pd.Timestamp("2009-12-17 00:00:00"),
                    pd.Timestamp("2009-12-17 00:00:00"),
                    pd.Timestamp("2004-01-09 00:00:00"),
                    pd.Timestamp("2007-12-31 00:00:00"),
                    pd.Timestamp("2007-12-31 00:00:00"),
                    pd.Timestamp("2009-09-04 00:00:00"),
                    pd.Timestamp("2009-09-02 00:00:00"),
                    pd.Timestamp("2009-09-02 00:00:00"),
                    pd.Timestamp("2006-06-02 00:00:00"),
                    pd.Timestamp("2005-01-04 00:00:00"),
                    pd.Timestamp("2013-12-31 00:00:00"),
                    pd.Timestamp("2004-10-22 00:00:00"),
                    pd.Timestamp("2012-03-08 00:00:00"),
                    pd.Timestamp("2010-04-13 00:00:00"),
                    pd.Timestamp("2010-04-20 00:00:00"),
                    pd.Timestamp("2012-03-05 00:00:00"),
                    pd.Timestamp("2011-09-16 00:00:00"),
                    pd.Timestamp("2010-04-13 00:00:00"),
                    pd.Timestamp("2011-09-16 00:00:00"),
                    pd.Timestamp("2010-04-13 00:00:00"),
                    pd.Timestamp("2010-04-13 00:00:00"),
                    pd.Timestamp("2011-09-09 00:00:00"),
                    pd.Timestamp("2010-04-13 00:00:00"),
                    pd.Timestamp("2011-09-01 00:00:00"),
                    pd.Timestamp("2010-04-20 00:00:00"),
                    pd.Timestamp("2010-04-13 00:00:00"),
                    pd.Timestamp("2010-04-13 00:00:00"),
                    pd.Timestamp("2011-09-16 00:00:00"),
                    pd.Timestamp("2012-03-06 00:00:00"),
                    pd.Timestamp("2012-03-05 00:00:00"),
                    pd.Timestamp("2011-09-09 00:00:00"),
                    pd.Timestamp("2010-04-20 00:00:00"),
                    pd.Timestamp("2010-04-13 00:00:00"),
                ],
                "End Date": [
                    pd.NaT,
                    pd.NaT,
                    pd.NaT,
                    pd.NaT,
                    pd.NaT,
                    pd.Timestamp("2019-12-19 00:00:00"),
                    pd.Timestamp("2019-12-19 00:00:00"),
                    pd.Timestamp("2019-12-19 00:00:00"),
                    pd.Timestamp("2019-12-19 00:00:00"),
                    pd.Timestamp("2019-12-19 00:00:00"),
                    pd.Timestamp("2019-12-19 00:00:00"),
                    pd.Timestamp("2019-12-19 00:00:00"),
                    pd.Timestamp("2019-12-19 00:00:00"),
                    pd.Timestamp("2019-12-20 00:00:00"),
                    pd.Timestamp("2019-12-20 00:00:00"),
                    pd.Timestamp("2019-12-20 00:00:00"),
                    pd.Timestamp("2019-12-20 00:00:00"),
                    pd.Timestamp("2019-12-20 00:00:00"),
                    pd.Timestamp("2019-12-20 00:00:00"),
                    pd.Timestamp("2019-12-20 00:00:00"),
                    pd.Timestamp("2019-12-20 00:00:00"),
                    pd.Timestamp("2019-12-20 00:00:00"),
                    pd.Timestamp("2019-12-20 00:00:00"),
                    pd.Timestamp("2019-12-20 00:00:00"),
                    pd.Timestamp("2019-12-20 00:00:00"),
                    pd.Timestamp("2019-12-19 00:00:00"),
                    pd.Timestamp("2019-12-19 00:00:00"),
                    pd.Timestamp("2019-12-18 00:00:00"),
                    pd.Timestamp("2019-12-19 00:00:00"),
                    pd.Timestamp("2019-12-19 00:00:00"),
                    pd.Timestamp("2019-12-19 00:00:00"),
                    pd.Timestamp("2019-12-19 00:00:00"),
                    pd.Timestamp("2019-12-19 00:00:00"),
                    pd.Timestamp("2019-12-19 00:00:00"),
                    pd.Timestamp("2019-12-20 00:00:00"),
                    pd.Timestamp("2019-12-20 00:00:00"),
                    pd.Timestamp("2019-12-20 00:00:00"),
                    pd.Timestamp("2019-12-20 00:00:00"),
                    pd.Timestamp("2019-12-20 00:00:00"),
                    pd.Timestamp("2019-12-20 00:00:00"),
                    pd.Timestamp("2019-12-20 00:00:00"),
                    pd.Timestamp("2019-12-20 00:00:00"),
                    pd.Timestamp("2019-12-20 00:00:00"),
                    pd.Timestamp("2019-12-20 00:00:00"),
                    pd.Timestamp("2019-12-20 00:00:00"),
                    pd.Timestamp("2019-12-20 00:00:00"),
                    pd.Timestamp("2019-12-19 00:00:00"),
                    pd.Timestamp("2019-12-19 00:00:00"),
                    pd.Timestamp("2019-12-19 00:00:00"),
                    pd.Timestamp("2014-10-31 00:00:00"),
                    pd.Timestamp("2019-12-18 00:00:00"),
                    pd.Timestamp("2019-12-18 00:00:00"),
                    pd.Timestamp("2019-12-20 00:00:00"),
                    pd.Timestamp("2019-12-20 00:00:00"),
                    pd.Timestamp("2019-12-19 00:00:00"),
                    pd.Timestamp("2019-12-19 00:00:00"),
                    pd.Timestamp("2019-12-19 00:00:00"),
                    pd.Timestamp("2019-12-19 00:00:00"),
                    pd.Timestamp("2019-12-19 00:00:00"),
                    pd.Timestamp("2019-12-19 00:00:00"),
                    pd.Timestamp("2019-12-19 00:00:00"),
                    pd.Timestamp("2019-12-19 00:00:00"),
                    pd.Timestamp("2019-12-19 00:00:00"),
                    pd.Timestamp("2019-12-19 00:00:00"),
                    pd.Timestamp("2019-12-19 00:00:00"),
                    pd.Timestamp("2019-12-19 00:00:00"),
                    pd.Timestamp("2019-12-19 00:00:00"),
                    pd.Timestamp("2019-12-19 00:00:00"),
                    pd.Timestamp("2019-12-19 00:00:00"),
                    pd.Timestamp("2019-12-19 00:00:00"),
                    pd.Timestamp("2019-12-19 00:00:00"),
                    pd.Timestamp("2019-12-19 00:00:00"),
                    pd.Timestamp("2019-10-30 00:00:00"),
                    pd.Timestamp("2019-10-30 00:00:00"),
                    pd.Timestamp("2019-10-30 00:00:00"),
                    pd.Timestamp("2014-05-30 00:00:00"),
                    pd.Timestamp("2019-12-24 00:00:00"),
                    pd.Timestamp("2019-12-20 00:00:00"),
                    pd.Timestamp("2019-12-24 00:00:00"),
                    pd.Timestamp("2015-02-11 00:00:00"),
                    pd.Timestamp("2019-12-24 00:00:00"),
                    pd.Timestamp("2019-12-24 00:00:00"),
                    pd.Timestamp("2019-12-24 00:00:00"),
                    pd.Timestamp("2019-12-24 00:00:00"),
                    pd.Timestamp("2019-12-24 00:00:00"),
                    pd.Timestamp("2019-12-24 00:00:00"),
                    pd.Timestamp("2019-12-24 00:00:00"),
                    pd.Timestamp("2019-12-24 00:00:00"),
                    pd.Timestamp("2019-12-24 00:00:00"),
                    pd.Timestamp("2019-12-06 00:00:00"),
                    pd.Timestamp("2019-12-24 00:00:00"),
                    pd.Timestamp("2019-12-24 00:00:00"),
                    pd.Timestamp("2019-12-24 00:00:00"),
                    pd.Timestamp("2019-12-24 00:00:00"),
                    pd.Timestamp("2019-12-24 00:00:00"),
                    pd.Timestamp("2019-12-24 00:00:00"),
                    pd.Timestamp("2019-12-24 00:00:00"),
                    pd.Timestamp("2019-12-24 00:00:00"),
                    pd.Timestamp("2019-12-24 00:00:00"),
                    pd.Timestamp("2019-12-24 00:00:00"),
                ],
                "Commodity": [
                    "Coal",
                    "Coal",
                    "Coal",
                    "Coal",
                    "Coal",
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Silver",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    np.nan,
                    np.nan,
                    "Coal",
                    "Coal",
                    "Coal",
                    "Coal",
                    "Coal",
                    "Coal",
                    "Coal",
                    "Coal",
                    "Coal",
                    "Coal",
                    "Coal",
                    "Coal",
                    "Coal",
                    "Coal",
                    "Coal",
                    "Coal",
                    "Coal",
                    "Coal",
                    "Coal",
                    "Coal",
                    "Coal",
                    "Coal",
                    "Coal",
                ],
                "Contracts": [
                    "CLEAR:ALW,CLEAR:MTF,CLEAR:QP,CLEAR:QX,DCE:JM,ICEEUROPE:AFR,ICEEUROPE:ATW,ICEEUROPE:ILB,ICEEUROPE:NCF,ICEEUROPE:UCA,ICEEUROPE:UCP,ICEEUROPE:UCX,IFEU:AFO,IFEU:AFR,IFEU:ATD,IFEU:ATH,IFEU:ATW,IFEU:CRF,IFEU:GCF,IFEU:GNA,IFEU:GNO,IFEU:I42,IFEU:M42,IFEU:NCC,IFEU:NCF,IFEU:NWC,IFEU:NWD,IFEU:NWE,IFEU:NWF,IFEU:NWG,IFEU:RBC,IFEU:RBD,IFEU:RBE,IFEU:RBF,IFEU:RBG,IFEU:RCA,IFEU:RCO,IFEU:RDE,IFEU:RDF,IFEU:RDG,NYMEX:ACM,NYMEX:ACT,NYMEX:ALW,NYMEX:ICI,NYMEX:M5F,NYMEX:MFF,NYMEX:MTF,NYMEX:QLD,NYMEX:QP,NYMEX:QXB,NYMEX:SSI,SGX:ACF",
                    "CLEAR:ALW,CLEAR:MTF,CLEAR:QP,CLEAR:QX,DCE:JM,ICEEUROPE:AFR,ICEEUROPE:ATW,ICEEUROPE:ILB,ICEEUROPE:NCF,ICEEUROPE:UCA,ICEEUROPE:UCP,ICEEUROPE:UCX,IFEU:AFO,IFEU:AFR,IFEU:ATD,IFEU:ATH,IFEU:ATW,IFEU:CRF,IFEU:GCF,IFEU:GNA,IFEU:GNO,IFEU:I42,IFEU:M42,IFEU:NCC,IFEU:NCF,IFEU:NWC,IFEU:NWD,IFEU:NWE,IFEU:NWF,IFEU:NWG,IFEU:RBC,IFEU:RBD,IFEU:RBE,IFEU:RBF,IFEU:RBG,IFEU:RCA,IFEU:RCO,IFEU:RDE,IFEU:RDF,IFEU:RDG,NYMEX:ACM,NYMEX:ACT,NYMEX:ALW,NYMEX:ICI,NYMEX:M5F,NYMEX:MFF,NYMEX:MTF,NYMEX:QLD,NYMEX:QP,NYMEX:QXB,NYMEX:SSI,SGX:ACF",
                    "CLEAR:ALW,CLEAR:MTF,CLEAR:QP,CLEAR:QX,DCE:JM,ICEEUROPE:AFR,ICEEUROPE:ATW,ICEEUROPE:ILB,ICEEUROPE:NCF,ICEEUROPE:UCA,ICEEUROPE:UCP,ICEEUROPE:UCX,IFEU:AFO,IFEU:AFR,IFEU:ATD,IFEU:ATH,IFEU:ATW,IFEU:CRF,IFEU:GCF,IFEU:GNA,IFEU:GNO,IFEU:I42,IFEU:M42,IFEU:NCC,IFEU:NCF,IFEU:NWC,IFEU:NWD,IFEU:NWE,IFEU:NWF,IFEU:NWG,IFEU:RBC,IFEU:RBD,IFEU:RBE,IFEU:RBF,IFEU:RBG,IFEU:RCA,IFEU:RCO,IFEU:RDE,IFEU:RDF,IFEU:RDG,NYMEX:ACM,NYMEX:ACT,NYMEX:ALW,NYMEX:ICI,NYMEX:M5F,NYMEX:MFF,NYMEX:MTF,NYMEX:QLD,NYMEX:QP,NYMEX:QXB,NYMEX:SSI,SGX:ACF",
                    "CLEAR:ALW,CLEAR:MTF,CLEAR:QP,CLEAR:QX,DCE:JM,ICEEUROPE:AFR,ICEEUROPE:ATW,ICEEUROPE:ILB,ICEEUROPE:NCF,ICEEUROPE:UCA,ICEEUROPE:UCP,ICEEUROPE:UCX,IFEU:AFO,IFEU:AFR,IFEU:ATD,IFEU:ATH,IFEU:ATW,IFEU:CRF,IFEU:GCF,IFEU:GNA,IFEU:GNO,IFEU:I42,IFEU:M42,IFEU:NCC,IFEU:NCF,IFEU:NWC,IFEU:NWD,IFEU:NWE,IFEU:NWF,IFEU:NWG,IFEU:RBC,IFEU:RBD,IFEU:RBE,IFEU:RBF,IFEU:RBG,IFEU:RCA,IFEU:RCO,IFEU:RDE,IFEU:RDF,IFEU:RDG,NYMEX:ACM,NYMEX:ACT,NYMEX:ALW,NYMEX:ICI,NYMEX:M5F,NYMEX:MFF,NYMEX:MTF,NYMEX:QLD,NYMEX:QP,NYMEX:QXB,NYMEX:SSI,SGX:ACF",
                    "CLEAR:ALW,CLEAR:MTF,CLEAR:QP,CLEAR:QX,DCE:JM,ICEEUROPE:AFR,ICEEUROPE:ATW,ICEEUROPE:ILB,ICEEUROPE:NCF,ICEEUROPE:UCA,ICEEUROPE:UCP,ICEEUROPE:UCX,IFEU:AFO,IFEU:AFR,IFEU:ATD,IFEU:ATH,IFEU:ATW,IFEU:CRF,IFEU:GCF,IFEU:GNA,IFEU:GNO,IFEU:I42,IFEU:M42,IFEU:NCC,IFEU:NCF,IFEU:NWC,IFEU:NWD,IFEU:NWE,IFEU:NWF,IFEU:NWG,IFEU:RBC,IFEU:RBD,IFEU:RBE,IFEU:RBF,IFEU:RBG,IFEU:RCA,IFEU:RCO,IFEU:RDE,IFEU:RDF,IFEU:RDG,NYMEX:ACM,NYMEX:ACT,NYMEX:ALW,NYMEX:ICI,NYMEX:M5F,NYMEX:MFF,NYMEX:MTF,NYMEX:QLD,NYMEX:QP,NYMEX:QXB,NYMEX:SSI,SGX:ACF",
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    "CBT:ZG,COMEX:8Q,COMEX:GC,COMEX:GCD,COMEX:GCK,COMEX:GCT,COMEX:GSP,COMEX:GSR,COMEX:MGC,COMEX:MGT,COMEX:QO,COMEX:QS,COMEX:XK,COMEX:YG,COMEX:oz troyUSD,DGCX:DG,ICEUS:YG,IFUS:AUD,IFUS:GDF,IFUS:YG,IFUS:ZG,LME:AU,MCX:GOLD,RTS:GOLD,SHFE:AU,TAIFEX:TGF,TCE:11,TCE:16",
                    "CBT:ZG,COMEX:8Q,COMEX:GC,COMEX:GCD,COMEX:GCK,COMEX:GCT,COMEX:GSP,COMEX:GSR,COMEX:MGC,COMEX:MGT,COMEX:QO,COMEX:QS,COMEX:XK,COMEX:YG,COMEX:oz troyUSD,DGCX:DG,ICEUS:YG,IFUS:AUD,IFUS:GDF,IFUS:YG,IFUS:ZG,LME:AU,MCX:GOLD,RTS:GOLD,SHFE:AU,TAIFEX:TGF,TCE:11,TCE:16",
                    "CBT:ZG,COMEX:8Q,COMEX:GC,COMEX:GCD,COMEX:GCK,COMEX:GCT,COMEX:GSP,COMEX:GSR,COMEX:MGC,COMEX:MGT,COMEX:QO,COMEX:QS,COMEX:XK,COMEX:YG,COMEX:oz troyUSD,DGCX:DG,ICEUS:YG,IFUS:AUD,IFUS:GDF,IFUS:YG,IFUS:ZG,LME:AU,MCX:GOLD,RTS:GOLD,SHFE:AU,TAIFEX:TGF,TCE:11,TCE:16",
                    "CBT:ZG,COMEX:8Q,COMEX:GC,COMEX:GCD,COMEX:GCK,COMEX:GCT,COMEX:GSP,COMEX:GSR,COMEX:MGC,COMEX:MGT,COMEX:QO,COMEX:QS,COMEX:XK,COMEX:YG,COMEX:oz troyUSD,DGCX:DG,ICEUS:YG,IFUS:AUD,IFUS:GDF,IFUS:YG,IFUS:ZG,LME:AU,MCX:GOLD,RTS:GOLD,SHFE:AU,TAIFEX:TGF,TCE:11,TCE:16",
                    "CBT:ZG,COMEX:8Q,COMEX:GC,COMEX:GCD,COMEX:GCK,COMEX:GCT,COMEX:GSP,COMEX:GSR,COMEX:MGC,COMEX:MGT,COMEX:QO,COMEX:QS,COMEX:XK,COMEX:YG,COMEX:oz troyUSD,DGCX:DG,ICEUS:YG,IFUS:AUD,IFUS:GDF,IFUS:YG,IFUS:ZG,LME:AU,MCX:GOLD,RTS:GOLD,SHFE:AU,TAIFEX:TGF,TCE:11,TCE:16",
                    "CBT:ZG,COMEX:8Q,COMEX:GC,COMEX:GCD,COMEX:GCK,COMEX:GCT,COMEX:GSP,COMEX:GSR,COMEX:MGC,COMEX:MGT,COMEX:QO,COMEX:QS,COMEX:XK,COMEX:YG,COMEX:oz troyUSD,DGCX:DG,ICEUS:YG,IFUS:AUD,IFUS:GDF,IFUS:YG,IFUS:ZG,LME:AU,MCX:GOLD,RTS:GOLD,SHFE:AU,TAIFEX:TGF,TCE:11,TCE:16",
                    "CBT:ZG,COMEX:8Q,COMEX:GC,COMEX:GCD,COMEX:GCK,COMEX:GCT,COMEX:GSP,COMEX:GSR,COMEX:MGC,COMEX:MGT,COMEX:QO,COMEX:QS,COMEX:XK,COMEX:YG,COMEX:oz troyUSD,DGCX:DG,ICEUS:YG,IFUS:AUD,IFUS:GDF,IFUS:YG,IFUS:ZG,LME:AU,MCX:GOLD,RTS:GOLD,SHFE:AU,TAIFEX:TGF,TCE:11,TCE:16",
                    "CBT:ZG,COMEX:8Q,COMEX:GC,COMEX:GCD,COMEX:GCK,COMEX:GCT,COMEX:GSP,COMEX:GSR,COMEX:MGC,COMEX:MGT,COMEX:QO,COMEX:QS,COMEX:XK,COMEX:YG,COMEX:oz troyUSD,DGCX:DG,ICEUS:YG,IFUS:AUD,IFUS:GDF,IFUS:YG,IFUS:ZG,LME:AU,MCX:GOLD,RTS:GOLD,SHFE:AU,TAIFEX:TGF,TCE:11,TCE:16",
                    "CBT:ZG,COMEX:8Q,COMEX:GC,COMEX:GCD,COMEX:GCK,COMEX:GCT,COMEX:GSP,COMEX:GSR,COMEX:MGC,COMEX:MGT,COMEX:QO,COMEX:QS,COMEX:XK,COMEX:YG,COMEX:oz troyUSD,DGCX:DG,ICEUS:YG,IFUS:AUD,IFUS:GDF,IFUS:YG,IFUS:ZG,LME:AU,MCX:GOLD,RTS:GOLD,SHFE:AU,TAIFEX:TGF,TCE:11,TCE:16",
                    "CBT:ZG,COMEX:8Q,COMEX:GC,COMEX:GCD,COMEX:GCK,COMEX:GCT,COMEX:GSP,COMEX:GSR,COMEX:MGC,COMEX:MGT,COMEX:QO,COMEX:QS,COMEX:XK,COMEX:YG,COMEX:oz troyUSD,DGCX:DG,ICEUS:YG,IFUS:AUD,IFUS:GDF,IFUS:YG,IFUS:ZG,LME:AU,MCX:GOLD,RTS:GOLD,SHFE:AU,TAIFEX:TGF,TCE:11,TCE:16",
                    "CBT:ZG,COMEX:8Q,COMEX:GC,COMEX:GCD,COMEX:GCK,COMEX:GCT,COMEX:GSP,COMEX:GSR,COMEX:MGC,COMEX:MGT,COMEX:QO,COMEX:QS,COMEX:XK,COMEX:YG,COMEX:oz troyUSD,DGCX:DG,ICEUS:YG,IFUS:AUD,IFUS:GDF,IFUS:YG,IFUS:ZG,LME:AU,MCX:GOLD,RTS:GOLD,SHFE:AU,TAIFEX:TGF,TCE:11,TCE:16",
                    "CBT:ZG,COMEX:8Q,COMEX:GC,COMEX:GCD,COMEX:GCK,COMEX:GCT,COMEX:GSP,COMEX:GSR,COMEX:MGC,COMEX:MGT,COMEX:QO,COMEX:QS,COMEX:XK,COMEX:YG,COMEX:oz troyUSD,DGCX:DG,ICEUS:YG,IFUS:AUD,IFUS:GDF,IFUS:YG,IFUS:ZG,LME:AU,MCX:GOLD,RTS:GOLD,SHFE:AU,TAIFEX:TGF,TCE:11,TCE:16",
                    "CBT:ZG,COMEX:8Q,COMEX:GC,COMEX:GCD,COMEX:GCK,COMEX:GCT,COMEX:GSP,COMEX:GSR,COMEX:MGC,COMEX:MGT,COMEX:QO,COMEX:QS,COMEX:XK,COMEX:YG,COMEX:oz troyUSD,DGCX:DG,ICEUS:YG,IFUS:AUD,IFUS:GDF,IFUS:YG,IFUS:ZG,LME:AU,MCX:GOLD,RTS:GOLD,SHFE:AU,TAIFEX:TGF,TCE:11,TCE:16",
                    "CBT:ZG,COMEX:8Q,COMEX:GC,COMEX:GCD,COMEX:GCK,COMEX:GCT,COMEX:GSP,COMEX:GSR,COMEX:MGC,COMEX:MGT,COMEX:QO,COMEX:QS,COMEX:XK,COMEX:YG,COMEX:oz troyUSD,DGCX:DG,ICEUS:YG,IFUS:AUD,IFUS:GDF,IFUS:YG,IFUS:ZG,LME:AU,MCX:GOLD,RTS:GOLD,SHFE:AU,TAIFEX:TGF,TCE:11,TCE:16",
                    "CBT:ZG,COMEX:8Q,COMEX:GC,COMEX:GCD,COMEX:GCK,COMEX:GCT,COMEX:GSP,COMEX:GSR,COMEX:MGC,COMEX:MGT,COMEX:QO,COMEX:QS,COMEX:XK,COMEX:YG,COMEX:oz troyUSD,DGCX:DG,ICEUS:YG,IFUS:AUD,IFUS:GDF,IFUS:YG,IFUS:ZG,LME:AU,MCX:GOLD,RTS:GOLD,SHFE:AU,TAIFEX:TGF,TCE:11,TCE:16",
                    "CBT:ZG,COMEX:8Q,COMEX:GC,COMEX:GCD,COMEX:GCK,COMEX:GCT,COMEX:GSP,COMEX:GSR,COMEX:MGC,COMEX:MGT,COMEX:QO,COMEX:QS,COMEX:XK,COMEX:YG,COMEX:oz troyUSD,DGCX:DG,ICEUS:YG,IFUS:AUD,IFUS:GDF,IFUS:YG,IFUS:ZG,LME:AU,MCX:GOLD,RTS:GOLD,SHFE:AU,TAIFEX:TGF,TCE:11,TCE:16",
                    "CBT:ZG,COMEX:8Q,COMEX:GC,COMEX:GCD,COMEX:GCK,COMEX:GCT,COMEX:GSP,COMEX:GSR,COMEX:MGC,COMEX:MGT,COMEX:QO,COMEX:QS,COMEX:XK,COMEX:YG,COMEX:oz troyUSD,DGCX:DG,ICEUS:YG,IFUS:AUD,IFUS:GDF,IFUS:YG,IFUS:ZG,LME:AU,MCX:GOLD,RTS:GOLD,SHFE:AU,TAIFEX:TGF,TCE:11,TCE:16",
                    "CBT:ZG,COMEX:8Q,COMEX:GC,COMEX:GCD,COMEX:GCK,COMEX:GCT,COMEX:GSP,COMEX:GSR,COMEX:MGC,COMEX:MGT,COMEX:QO,COMEX:QS,COMEX:XK,COMEX:YG,COMEX:oz troyUSD,DGCX:DG,ICEUS:YG,IFUS:AUD,IFUS:GDF,IFUS:YG,IFUS:ZG,LME:AU,MCX:GOLD,RTS:GOLD,SHFE:AU,TAIFEX:TGF,TCE:11,TCE:16",
                    "CBT:ZG,COMEX:8Q,COMEX:GC,COMEX:GCD,COMEX:GCK,COMEX:GCT,COMEX:GSP,COMEX:GSR,COMEX:MGC,COMEX:MGT,COMEX:QO,COMEX:QS,COMEX:XK,COMEX:YG,COMEX:oz troyUSD,DGCX:DG,ICEUS:YG,IFUS:AUD,IFUS:GDF,IFUS:YG,IFUS:ZG,LME:AU,MCX:GOLD,RTS:GOLD,SHFE:AU,TAIFEX:TGF,TCE:11,TCE:16",
                    "CBT:ZG,COMEX:8Q,COMEX:GC,COMEX:GCD,COMEX:GCK,COMEX:GCT,COMEX:GSP,COMEX:GSR,COMEX:MGC,COMEX:MGT,COMEX:QO,COMEX:QS,COMEX:XK,COMEX:YG,COMEX:oz troyUSD,DGCX:DG,ICEUS:YG,IFUS:AUD,IFUS:GDF,IFUS:YG,IFUS:ZG,LME:AU,MCX:GOLD,RTS:GOLD,SHFE:AU,TAIFEX:TGF,TCE:11,TCE:16",
                    "COMEX:6Q,COMEX:QI,COMEX:SI,COMEX:SIL,COMEX:SIT,COMEX:SSP,COMEX:SV,COMEX:XY,COMEX:YV,DGCX:DS,ICEUS:YI,ICEUS:ZI,IFUS:HIO,IFUS:YI,IFUS:ZI,LME:AG,MCX:SILVER,SHFE:AG,TCE:12",
                    "CBT:ZG,COMEX:8Q,COMEX:GC,COMEX:GCD,COMEX:GCK,COMEX:GCT,COMEX:GSP,COMEX:GSR,COMEX:MGC,COMEX:MGT,COMEX:QO,COMEX:QS,COMEX:XK,COMEX:YG,COMEX:oz troyUSD,DGCX:DG,ICEUS:YG,IFUS:AUD,IFUS:GDF,IFUS:YG,IFUS:ZG,LME:AU,MCX:GOLD,RTS:GOLD,SHFE:AU,TAIFEX:TGF,TCE:11,TCE:16",
                    "CBT:ZG,COMEX:8Q,COMEX:GC,COMEX:GCD,COMEX:GCK,COMEX:GCT,COMEX:GSP,COMEX:GSR,COMEX:MGC,COMEX:MGT,COMEX:QO,COMEX:QS,COMEX:XK,COMEX:YG,COMEX:oz troyUSD,DGCX:DG,ICEUS:YG,IFUS:AUD,IFUS:GDF,IFUS:YG,IFUS:ZG,LME:AU,MCX:GOLD,RTS:GOLD,SHFE:AU,TAIFEX:TGF,TCE:11,TCE:16",
                    "CBT:ZG,COMEX:8Q,COMEX:GC,COMEX:GCD,COMEX:GCK,COMEX:GCT,COMEX:GSP,COMEX:GSR,COMEX:MGC,COMEX:MGT,COMEX:QO,COMEX:QS,COMEX:XK,COMEX:YG,COMEX:oz troyUSD,DGCX:DG,ICEUS:YG,IFUS:AUD,IFUS:GDF,IFUS:YG,IFUS:ZG,LME:AU,MCX:GOLD,RTS:GOLD,SHFE:AU,TAIFEX:TGF,TCE:11,TCE:16",
                    "CBT:ZG,COMEX:8Q,COMEX:GC,COMEX:GCD,COMEX:GCK,COMEX:GCT,COMEX:GSP,COMEX:GSR,COMEX:MGC,COMEX:MGT,COMEX:QO,COMEX:QS,COMEX:XK,COMEX:YG,COMEX:oz troyUSD,DGCX:DG,ICEUS:YG,IFUS:AUD,IFUS:GDF,IFUS:YG,IFUS:ZG,LME:AU,MCX:GOLD,RTS:GOLD,SHFE:AU,TAIFEX:TGF,TCE:11,TCE:16",
                    "CBT:ZG,COMEX:8Q,COMEX:GC,COMEX:GCD,COMEX:GCK,COMEX:GCT,COMEX:GSP,COMEX:GSR,COMEX:MGC,COMEX:MGT,COMEX:QO,COMEX:QS,COMEX:XK,COMEX:YG,COMEX:oz troyUSD,DGCX:DG,ICEUS:YG,IFUS:AUD,IFUS:GDF,IFUS:YG,IFUS:ZG,LME:AU,MCX:GOLD,RTS:GOLD,SHFE:AU,TAIFEX:TGF,TCE:11,TCE:16",
                    "CBT:ZG,COMEX:8Q,COMEX:GC,COMEX:GCD,COMEX:GCK,COMEX:GCT,COMEX:GSP,COMEX:GSR,COMEX:MGC,COMEX:MGT,COMEX:QO,COMEX:QS,COMEX:XK,COMEX:YG,COMEX:oz troyUSD,DGCX:DG,ICEUS:YG,IFUS:AUD,IFUS:GDF,IFUS:YG,IFUS:ZG,LME:AU,MCX:GOLD,RTS:GOLD,SHFE:AU,TAIFEX:TGF,TCE:11,TCE:16",
                    "CBT:ZG,COMEX:8Q,COMEX:GC,COMEX:GCD,COMEX:GCK,COMEX:GCT,COMEX:GSP,COMEX:GSR,COMEX:MGC,COMEX:MGT,COMEX:QO,COMEX:QS,COMEX:XK,COMEX:YG,COMEX:oz troyUSD,DGCX:DG,ICEUS:YG,IFUS:AUD,IFUS:GDF,IFUS:YG,IFUS:ZG,LME:AU,MCX:GOLD,RTS:GOLD,SHFE:AU,TAIFEX:TGF,TCE:11,TCE:16",
                    "CBT:ZG,COMEX:8Q,COMEX:GC,COMEX:GCD,COMEX:GCK,COMEX:GCT,COMEX:GSP,COMEX:GSR,COMEX:MGC,COMEX:MGT,COMEX:QO,COMEX:QS,COMEX:XK,COMEX:YG,COMEX:oz troyUSD,DGCX:DG,ICEUS:YG,IFUS:AUD,IFUS:GDF,IFUS:YG,IFUS:ZG,LME:AU,MCX:GOLD,RTS:GOLD,SHFE:AU,TAIFEX:TGF,TCE:11,TCE:16",
                    "CBT:ZG,COMEX:8Q,COMEX:GC,COMEX:GCD,COMEX:GCK,COMEX:GCT,COMEX:GSP,COMEX:GSR,COMEX:MGC,COMEX:MGT,COMEX:QO,COMEX:QS,COMEX:XK,COMEX:YG,COMEX:oz troyUSD,DGCX:DG,ICEUS:YG,IFUS:AUD,IFUS:GDF,IFUS:YG,IFUS:ZG,LME:AU,MCX:GOLD,RTS:GOLD,SHFE:AU,TAIFEX:TGF,TCE:11,TCE:16",
                    "CBT:ZG,COMEX:8Q,COMEX:GC,COMEX:GCD,COMEX:GCK,COMEX:GCT,COMEX:GSP,COMEX:GSR,COMEX:MGC,COMEX:MGT,COMEX:QO,COMEX:QS,COMEX:XK,COMEX:YG,COMEX:oz troyUSD,DGCX:DG,ICEUS:YG,IFUS:AUD,IFUS:GDF,IFUS:YG,IFUS:ZG,LME:AU,MCX:GOLD,RTS:GOLD,SHFE:AU,TAIFEX:TGF,TCE:11,TCE:16",
                    "CBT:ZG,COMEX:8Q,COMEX:GC,COMEX:GCD,COMEX:GCK,COMEX:GCT,COMEX:GSP,COMEX:GSR,COMEX:MGC,COMEX:MGT,COMEX:QO,COMEX:QS,COMEX:XK,COMEX:YG,COMEX:oz troyUSD,DGCX:DG,ICEUS:YG,IFUS:AUD,IFUS:GDF,IFUS:YG,IFUS:ZG,LME:AU,MCX:GOLD,RTS:GOLD,SHFE:AU,TAIFEX:TGF,TCE:11,TCE:16",
                    "CBT:ZG,COMEX:8Q,COMEX:GC,COMEX:GCD,COMEX:GCK,COMEX:GCT,COMEX:GSP,COMEX:GSR,COMEX:MGC,COMEX:MGT,COMEX:QO,COMEX:QS,COMEX:XK,COMEX:YG,COMEX:oz troyUSD,DGCX:DG,ICEUS:YG,IFUS:AUD,IFUS:GDF,IFUS:YG,IFUS:ZG,LME:AU,MCX:GOLD,RTS:GOLD,SHFE:AU,TAIFEX:TGF,TCE:11,TCE:16",
                    "CBT:ZG,COMEX:8Q,COMEX:GC,COMEX:GCD,COMEX:GCK,COMEX:GCT,COMEX:GSP,COMEX:GSR,COMEX:MGC,COMEX:MGT,COMEX:QO,COMEX:QS,COMEX:XK,COMEX:YG,COMEX:oz troyUSD,DGCX:DG,ICEUS:YG,IFUS:AUD,IFUS:GDF,IFUS:YG,IFUS:ZG,LME:AU,MCX:GOLD,RTS:GOLD,SHFE:AU,TAIFEX:TGF,TCE:11,TCE:16",
                    "CBT:ZG,COMEX:8Q,COMEX:GC,COMEX:GCD,COMEX:GCK,COMEX:GCT,COMEX:GSP,COMEX:GSR,COMEX:MGC,COMEX:MGT,COMEX:QO,COMEX:QS,COMEX:XK,COMEX:YG,COMEX:oz troyUSD,DGCX:DG,ICEUS:YG,IFUS:AUD,IFUS:GDF,IFUS:YG,IFUS:ZG,LME:AU,MCX:GOLD,RTS:GOLD,SHFE:AU,TAIFEX:TGF,TCE:11,TCE:16",
                    "CBT:ZG,COMEX:8Q,COMEX:GC,COMEX:GCD,COMEX:GCK,COMEX:GCT,COMEX:GSP,COMEX:GSR,COMEX:MGC,COMEX:MGT,COMEX:QO,COMEX:QS,COMEX:XK,COMEX:YG,COMEX:oz troyUSD,DGCX:DG,ICEUS:YG,IFUS:AUD,IFUS:GDF,IFUS:YG,IFUS:ZG,LME:AU,MCX:GOLD,RTS:GOLD,SHFE:AU,TAIFEX:TGF,TCE:11,TCE:16",
                    "CBT:ZG,COMEX:8Q,COMEX:GC,COMEX:GCD,COMEX:GCK,COMEX:GCT,COMEX:GSP,COMEX:GSR,COMEX:MGC,COMEX:MGT,COMEX:QO,COMEX:QS,COMEX:XK,COMEX:YG,COMEX:oz troyUSD,DGCX:DG,ICEUS:YG,IFUS:AUD,IFUS:GDF,IFUS:YG,IFUS:ZG,LME:AU,MCX:GOLD,RTS:GOLD,SHFE:AU,TAIFEX:TGF,TCE:11,TCE:16",
                    "CBT:ZG,COMEX:8Q,COMEX:GC,COMEX:GCD,COMEX:GCK,COMEX:GCT,COMEX:GSP,COMEX:GSR,COMEX:MGC,COMEX:MGT,COMEX:QO,COMEX:QS,COMEX:XK,COMEX:YG,COMEX:oz troyUSD,DGCX:DG,ICEUS:YG,IFUS:AUD,IFUS:GDF,IFUS:YG,IFUS:ZG,LME:AU,MCX:GOLD,RTS:GOLD,SHFE:AU,TAIFEX:TGF,TCE:11,TCE:16",
                    "CBT:ZG,COMEX:8Q,COMEX:GC,COMEX:GCD,COMEX:GCK,COMEX:GCT,COMEX:GSP,COMEX:GSR,COMEX:MGC,COMEX:MGT,COMEX:QO,COMEX:QS,COMEX:XK,COMEX:YG,COMEX:oz troyUSD,DGCX:DG,ICEUS:YG,IFUS:AUD,IFUS:GDF,IFUS:YG,IFUS:ZG,LME:AU,MCX:GOLD,RTS:GOLD,SHFE:AU,TAIFEX:TGF,TCE:11,TCE:16",
                    "CBT:ZG,COMEX:8Q,COMEX:GC,COMEX:GCD,COMEX:GCK,COMEX:GCT,COMEX:GSP,COMEX:GSR,COMEX:MGC,COMEX:MGT,COMEX:QO,COMEX:QS,COMEX:XK,COMEX:YG,COMEX:oz troyUSD,DGCX:DG,ICEUS:YG,IFUS:AUD,IFUS:GDF,IFUS:YG,IFUS:ZG,LME:AU,MCX:GOLD,RTS:GOLD,SHFE:AU,TAIFEX:TGF,TCE:11,TCE:16",
                    "CBT:ZG,COMEX:8Q,COMEX:GC,COMEX:GCD,COMEX:GCK,COMEX:GCT,COMEX:GSP,COMEX:GSR,COMEX:MGC,COMEX:MGT,COMEX:QO,COMEX:QS,COMEX:XK,COMEX:YG,COMEX:oz troyUSD,DGCX:DG,ICEUS:YG,IFUS:AUD,IFUS:GDF,IFUS:YG,IFUS:ZG,LME:AU,MCX:GOLD,RTS:GOLD,SHFE:AU,TAIFEX:TGF,TCE:11,TCE:16",
                    "CBT:ZG,COMEX:8Q,COMEX:GC,COMEX:GCD,COMEX:GCK,COMEX:GCT,COMEX:GSP,COMEX:GSR,COMEX:MGC,COMEX:MGT,COMEX:QO,COMEX:QS,COMEX:XK,COMEX:YG,COMEX:oz troyUSD,DGCX:DG,ICEUS:YG,IFUS:AUD,IFUS:GDF,IFUS:YG,IFUS:ZG,LME:AU,MCX:GOLD,RTS:GOLD,SHFE:AU,TAIFEX:TGF,TCE:11,TCE:16",
                    "CBT:ZG,COMEX:8Q,COMEX:GC,COMEX:GCD,COMEX:GCK,COMEX:GCT,COMEX:GSP,COMEX:GSR,COMEX:MGC,COMEX:MGT,COMEX:QO,COMEX:QS,COMEX:XK,COMEX:YG,COMEX:oz troyUSD,DGCX:DG,ICEUS:YG,IFUS:AUD,IFUS:GDF,IFUS:YG,IFUS:ZG,LME:AU,MCX:GOLD,RTS:GOLD,SHFE:AU,TAIFEX:TGF,TCE:11,TCE:16",
                    "CBT:ZG,COMEX:8Q,COMEX:GC,COMEX:GCD,COMEX:GCK,COMEX:GCT,COMEX:GSP,COMEX:GSR,COMEX:MGC,COMEX:MGT,COMEX:QO,COMEX:QS,COMEX:XK,COMEX:YG,COMEX:oz troyUSD,DGCX:DG,ICEUS:YG,IFUS:AUD,IFUS:GDF,IFUS:YG,IFUS:ZG,LME:AU,MCX:GOLD,RTS:GOLD,SHFE:AU,TAIFEX:TGF,TCE:11,TCE:16",
                    "CBT:ZG,COMEX:8Q,COMEX:GC,COMEX:GCD,COMEX:GCK,COMEX:GCT,COMEX:GSP,COMEX:GSR,COMEX:MGC,COMEX:MGT,COMEX:QO,COMEX:QS,COMEX:XK,COMEX:YG,COMEX:oz troyUSD,DGCX:DG,ICEUS:YG,IFUS:AUD,IFUS:GDF,IFUS:YG,IFUS:ZG,LME:AU,MCX:GOLD,RTS:GOLD,SHFE:AU,TAIFEX:TGF,TCE:11,TCE:16",
                    "CBT:ZG,COMEX:8Q,COMEX:GC,COMEX:GCD,COMEX:GCK,COMEX:GCT,COMEX:GSP,COMEX:GSR,COMEX:MGC,COMEX:MGT,COMEX:QO,COMEX:QS,COMEX:XK,COMEX:YG,COMEX:oz troyUSD,DGCX:DG,ICEUS:YG,IFUS:AUD,IFUS:GDF,IFUS:YG,IFUS:ZG,LME:AU,MCX:GOLD,RTS:GOLD,SHFE:AU,TAIFEX:TGF,TCE:11,TCE:16",
                    "CBT:ZG,COMEX:8Q,COMEX:GC,COMEX:GCD,COMEX:GCK,COMEX:GCT,COMEX:GSP,COMEX:GSR,COMEX:MGC,COMEX:MGT,COMEX:QO,COMEX:QS,COMEX:XK,COMEX:YG,COMEX:oz troyUSD,DGCX:DG,ICEUS:YG,IFUS:AUD,IFUS:GDF,IFUS:YG,IFUS:ZG,LME:AU,MCX:GOLD,RTS:GOLD,SHFE:AU,TAIFEX:TGF,TCE:11,TCE:16",
                    "CBT:ZG,COMEX:8Q,COMEX:GC,COMEX:GCD,COMEX:GCK,COMEX:GCT,COMEX:GSP,COMEX:GSR,COMEX:MGC,COMEX:MGT,COMEX:QO,COMEX:QS,COMEX:XK,COMEX:YG,COMEX:oz troyUSD,DGCX:DG,ICEUS:YG,IFUS:AUD,IFUS:GDF,IFUS:YG,IFUS:ZG,LME:AU,MCX:GOLD,RTS:GOLD,SHFE:AU,TAIFEX:TGF,TCE:11,TCE:16",
                    "CBT:ZG,COMEX:8Q,COMEX:GC,COMEX:GCD,COMEX:GCK,COMEX:GCT,COMEX:GSP,COMEX:GSR,COMEX:MGC,COMEX:MGT,COMEX:QO,COMEX:QS,COMEX:XK,COMEX:YG,COMEX:oz troyUSD,DGCX:DG,ICEUS:YG,IFUS:AUD,IFUS:GDF,IFUS:YG,IFUS:ZG,LME:AU,MCX:GOLD,RTS:GOLD,SHFE:AU,TAIFEX:TGF,TCE:11,TCE:16",
                    "CBT:ZG,COMEX:8Q,COMEX:GC,COMEX:GCD,COMEX:GCK,COMEX:GCT,COMEX:GSP,COMEX:GSR,COMEX:MGC,COMEX:MGT,COMEX:QO,COMEX:QS,COMEX:XK,COMEX:YG,COMEX:oz troyUSD,DGCX:DG,ICEUS:YG,IFUS:AUD,IFUS:GDF,IFUS:YG,IFUS:ZG,LME:AU,MCX:GOLD,RTS:GOLD,SHFE:AU,TAIFEX:TGF,TCE:11,TCE:16",
                    "CBT:ZG,COMEX:8Q,COMEX:GC,COMEX:GCD,COMEX:GCK,COMEX:GCT,COMEX:GSP,COMEX:GSR,COMEX:MGC,COMEX:MGT,COMEX:QO,COMEX:QS,COMEX:XK,COMEX:YG,COMEX:oz troyUSD,DGCX:DG,ICEUS:YG,IFUS:AUD,IFUS:GDF,IFUS:YG,IFUS:ZG,LME:AU,MCX:GOLD,RTS:GOLD,SHFE:AU,TAIFEX:TGF,TCE:11,TCE:16",
                    "CBT:ZG,COMEX:8Q,COMEX:GC,COMEX:GCD,COMEX:GCK,COMEX:GCT,COMEX:GSP,COMEX:GSR,COMEX:MGC,COMEX:MGT,COMEX:QO,COMEX:QS,COMEX:XK,COMEX:YG,COMEX:oz troyUSD,DGCX:DG,ICEUS:YG,IFUS:AUD,IFUS:GDF,IFUS:YG,IFUS:ZG,LME:AU,MCX:GOLD,RTS:GOLD,SHFE:AU,TAIFEX:TGF,TCE:11,TCE:16",
                    "CBT:ZG,COMEX:8Q,COMEX:GC,COMEX:GCD,COMEX:GCK,COMEX:GCT,COMEX:GSP,COMEX:GSR,COMEX:MGC,COMEX:MGT,COMEX:QO,COMEX:QS,COMEX:XK,COMEX:YG,COMEX:oz troyUSD,DGCX:DG,ICEUS:YG,IFUS:AUD,IFUS:GDF,IFUS:YG,IFUS:ZG,LME:AU,MCX:GOLD,RTS:GOLD,SHFE:AU,TAIFEX:TGF,TCE:11,TCE:16",
                    "CBT:ZG,COMEX:8Q,COMEX:GC,COMEX:GCD,COMEX:GCK,COMEX:GCT,COMEX:GSP,COMEX:GSR,COMEX:MGC,COMEX:MGT,COMEX:QO,COMEX:QS,COMEX:XK,COMEX:YG,COMEX:oz troyUSD,DGCX:DG,ICEUS:YG,IFUS:AUD,IFUS:GDF,IFUS:YG,IFUS:ZG,LME:AU,MCX:GOLD,RTS:GOLD,SHFE:AU,TAIFEX:TGF,TCE:11,TCE:16",
                    "CBT:ZG,COMEX:8Q,COMEX:GC,COMEX:GCD,COMEX:GCK,COMEX:GCT,COMEX:GSP,COMEX:GSR,COMEX:MGC,COMEX:MGT,COMEX:QO,COMEX:QS,COMEX:XK,COMEX:YG,COMEX:oz troyUSD,DGCX:DG,ICEUS:YG,IFUS:AUD,IFUS:GDF,IFUS:YG,IFUS:ZG,LME:AU,MCX:GOLD,RTS:GOLD,SHFE:AU,TAIFEX:TGF,TCE:11,TCE:16",
                    "CBT:ZG,COMEX:8Q,COMEX:GC,COMEX:GCD,COMEX:GCK,COMEX:GCT,COMEX:GSP,COMEX:GSR,COMEX:MGC,COMEX:MGT,COMEX:QO,COMEX:QS,COMEX:XK,COMEX:YG,COMEX:oz troyUSD,DGCX:DG,ICEUS:YG,IFUS:AUD,IFUS:GDF,IFUS:YG,IFUS:ZG,LME:AU,MCX:GOLD,RTS:GOLD,SHFE:AU,TAIFEX:TGF,TCE:11,TCE:16",
                    "CBT:ZG,COMEX:8Q,COMEX:GC,COMEX:GCD,COMEX:GCK,COMEX:GCT,COMEX:GSP,COMEX:GSR,COMEX:MGC,COMEX:MGT,COMEX:QO,COMEX:QS,COMEX:XK,COMEX:YG,COMEX:oz troyUSD,DGCX:DG,ICEUS:YG,IFUS:AUD,IFUS:GDF,IFUS:YG,IFUS:ZG,LME:AU,MCX:GOLD,RTS:GOLD,SHFE:AU,TAIFEX:TGF,TCE:11,TCE:16",
                    "CBT:ZG,COMEX:8Q,COMEX:GC,COMEX:GCD,COMEX:GCK,COMEX:GCT,COMEX:GSP,COMEX:GSR,COMEX:MGC,COMEX:MGT,COMEX:QO,COMEX:QS,COMEX:XK,COMEX:YG,COMEX:oz troyUSD,DGCX:DG,ICEUS:YG,IFUS:AUD,IFUS:GDF,IFUS:YG,IFUS:ZG,LME:AU,MCX:GOLD,RTS:GOLD,SHFE:AU,TAIFEX:TGF,TCE:11,TCE:16",
                    "CBT:ZG,COMEX:8Q,COMEX:GC,COMEX:GCD,COMEX:GCK,COMEX:GCT,COMEX:GSP,COMEX:GSR,COMEX:MGC,COMEX:MGT,COMEX:QO,COMEX:QS,COMEX:XK,COMEX:YG,COMEX:oz troyUSD,DGCX:DG,ICEUS:YG,IFUS:AUD,IFUS:GDF,IFUS:YG,IFUS:ZG,LME:AU,MCX:GOLD,RTS:GOLD,SHFE:AU,TAIFEX:TGF,TCE:11,TCE:16",
                    "CBT:ZG,COMEX:8Q,COMEX:GC,COMEX:GCD,COMEX:GCK,COMEX:GCT,COMEX:GSP,COMEX:GSR,COMEX:MGC,COMEX:MGT,COMEX:QO,COMEX:QS,COMEX:XK,COMEX:YG,COMEX:oz troyUSD,DGCX:DG,ICEUS:YG,IFUS:AUD,IFUS:GDF,IFUS:YG,IFUS:ZG,LME:AU,MCX:GOLD,RTS:GOLD,SHFE:AU,TAIFEX:TGF,TCE:11,TCE:16",
                    "CBT:ZG,COMEX:8Q,COMEX:GC,COMEX:GCD,COMEX:GCK,COMEX:GCT,COMEX:GSP,COMEX:GSR,COMEX:MGC,COMEX:MGT,COMEX:QO,COMEX:QS,COMEX:XK,COMEX:YG,COMEX:oz troyUSD,DGCX:DG,ICEUS:YG,IFUS:AUD,IFUS:GDF,IFUS:YG,IFUS:ZG,LME:AU,MCX:GOLD,RTS:GOLD,SHFE:AU,TAIFEX:TGF,TCE:11,TCE:16",
                    "CBT:ZG,COMEX:8Q,COMEX:GC,COMEX:GCD,COMEX:GCK,COMEX:GCT,COMEX:GSP,COMEX:GSR,COMEX:MGC,COMEX:MGT,COMEX:QO,COMEX:QS,COMEX:XK,COMEX:YG,COMEX:oz troyUSD,DGCX:DG,ICEUS:YG,IFUS:AUD,IFUS:GDF,IFUS:YG,IFUS:ZG,LME:AU,MCX:GOLD,RTS:GOLD,SHFE:AU,TAIFEX:TGF,TCE:11,TCE:16",
                    np.nan,
                    np.nan,
                    "CLEAR:ALW,CLEAR:MTF,CLEAR:QP,CLEAR:QX,DCE:JM,ICEEUROPE:AFR,ICEEUROPE:ATW,ICEEUROPE:ILB,ICEEUROPE:NCF,ICEEUROPE:UCA,ICEEUROPE:UCP,ICEEUROPE:UCX,IFEU:AFO,IFEU:AFR,IFEU:ATD,IFEU:ATH,IFEU:ATW,IFEU:CRF,IFEU:GCF,IFEU:GNA,IFEU:GNO,IFEU:I42,IFEU:M42,IFEU:NCC,IFEU:NCF,IFEU:NWC,IFEU:NWD,IFEU:NWE,IFEU:NWF,IFEU:NWG,IFEU:RBC,IFEU:RBD,IFEU:RBE,IFEU:RBF,IFEU:RBG,IFEU:RCA,IFEU:RCO,IFEU:RDE,IFEU:RDF,IFEU:RDG,NYMEX:ACM,NYMEX:ACT,NYMEX:ALW,NYMEX:ICI,NYMEX:M5F,NYMEX:MFF,NYMEX:MTF,NYMEX:QLD,NYMEX:QP,NYMEX:QXB,NYMEX:SSI,SGX:ACF",
                    "CLEAR:ALW,CLEAR:MTF,CLEAR:QP,CLEAR:QX,DCE:JM,ICEEUROPE:AFR,ICEEUROPE:ATW,ICEEUROPE:ILB,ICEEUROPE:NCF,ICEEUROPE:UCA,ICEEUROPE:UCP,ICEEUROPE:UCX,IFEU:AFO,IFEU:AFR,IFEU:ATD,IFEU:ATH,IFEU:ATW,IFEU:CRF,IFEU:GCF,IFEU:GNA,IFEU:GNO,IFEU:I42,IFEU:M42,IFEU:NCC,IFEU:NCF,IFEU:NWC,IFEU:NWD,IFEU:NWE,IFEU:NWF,IFEU:NWG,IFEU:RBC,IFEU:RBD,IFEU:RBE,IFEU:RBF,IFEU:RBG,IFEU:RCA,IFEU:RCO,IFEU:RDE,IFEU:RDF,IFEU:RDG,NYMEX:ACM,NYMEX:ACT,NYMEX:ALW,NYMEX:ICI,NYMEX:M5F,NYMEX:MFF,NYMEX:MTF,NYMEX:QLD,NYMEX:QP,NYMEX:QXB,NYMEX:SSI,SGX:ACF",
                    "CLEAR:ALW,CLEAR:MTF,CLEAR:QP,CLEAR:QX,DCE:JM,ICEEUROPE:AFR,ICEEUROPE:ATW,ICEEUROPE:ILB,ICEEUROPE:NCF,ICEEUROPE:UCA,ICEEUROPE:UCP,ICEEUROPE:UCX,IFEU:AFO,IFEU:AFR,IFEU:ATD,IFEU:ATH,IFEU:ATW,IFEU:CRF,IFEU:GCF,IFEU:GNA,IFEU:GNO,IFEU:I42,IFEU:M42,IFEU:NCC,IFEU:NCF,IFEU:NWC,IFEU:NWD,IFEU:NWE,IFEU:NWF,IFEU:NWG,IFEU:RBC,IFEU:RBD,IFEU:RBE,IFEU:RBF,IFEU:RBG,IFEU:RCA,IFEU:RCO,IFEU:RDE,IFEU:RDF,IFEU:RDG,NYMEX:ACM,NYMEX:ACT,NYMEX:ALW,NYMEX:ICI,NYMEX:M5F,NYMEX:MFF,NYMEX:MTF,NYMEX:QLD,NYMEX:QP,NYMEX:QXB,NYMEX:SSI,SGX:ACF",
                    "CLEAR:ALW,CLEAR:MTF,CLEAR:QP,CLEAR:QX,DCE:JM,ICEEUROPE:AFR,ICEEUROPE:ATW,ICEEUROPE:ILB,ICEEUROPE:NCF,ICEEUROPE:UCA,ICEEUROPE:UCP,ICEEUROPE:UCX,IFEU:AFO,IFEU:AFR,IFEU:ATD,IFEU:ATH,IFEU:ATW,IFEU:CRF,IFEU:GCF,IFEU:GNA,IFEU:GNO,IFEU:I42,IFEU:M42,IFEU:NCC,IFEU:NCF,IFEU:NWC,IFEU:NWD,IFEU:NWE,IFEU:NWF,IFEU:NWG,IFEU:RBC,IFEU:RBD,IFEU:RBE,IFEU:RBF,IFEU:RBG,IFEU:RCA,IFEU:RCO,IFEU:RDE,IFEU:RDF,IFEU:RDG,NYMEX:ACM,NYMEX:ACT,NYMEX:ALW,NYMEX:ICI,NYMEX:M5F,NYMEX:MFF,NYMEX:MTF,NYMEX:QLD,NYMEX:QP,NYMEX:QXB,NYMEX:SSI,SGX:ACF",
                    "CLEAR:ALW,CLEAR:MTF,CLEAR:QP,CLEAR:QX,DCE:JM,ICEEUROPE:AFR,ICEEUROPE:ATW,ICEEUROPE:ILB,ICEEUROPE:NCF,ICEEUROPE:UCA,ICEEUROPE:UCP,ICEEUROPE:UCX,IFEU:AFO,IFEU:AFR,IFEU:ATD,IFEU:ATH,IFEU:ATW,IFEU:CRF,IFEU:GCF,IFEU:GNA,IFEU:GNO,IFEU:I42,IFEU:M42,IFEU:NCC,IFEU:NCF,IFEU:NWC,IFEU:NWD,IFEU:NWE,IFEU:NWF,IFEU:NWG,IFEU:RBC,IFEU:RBD,IFEU:RBE,IFEU:RBF,IFEU:RBG,IFEU:RCA,IFEU:RCO,IFEU:RDE,IFEU:RDF,IFEU:RDG,NYMEX:ACM,NYMEX:ACT,NYMEX:ALW,NYMEX:ICI,NYMEX:M5F,NYMEX:MFF,NYMEX:MTF,NYMEX:QLD,NYMEX:QP,NYMEX:QXB,NYMEX:SSI,SGX:ACF",
                    "CLEAR:ALW,CLEAR:MTF,CLEAR:QP,CLEAR:QX,DCE:JM,ICEEUROPE:AFR,ICEEUROPE:ATW,ICEEUROPE:ILB,ICEEUROPE:NCF,ICEEUROPE:UCA,ICEEUROPE:UCP,ICEEUROPE:UCX,IFEU:AFO,IFEU:AFR,IFEU:ATD,IFEU:ATH,IFEU:ATW,IFEU:CRF,IFEU:GCF,IFEU:GNA,IFEU:GNO,IFEU:I42,IFEU:M42,IFEU:NCC,IFEU:NCF,IFEU:NWC,IFEU:NWD,IFEU:NWE,IFEU:NWF,IFEU:NWG,IFEU:RBC,IFEU:RBD,IFEU:RBE,IFEU:RBF,IFEU:RBG,IFEU:RCA,IFEU:RCO,IFEU:RDE,IFEU:RDF,IFEU:RDG,NYMEX:ACM,NYMEX:ACT,NYMEX:ALW,NYMEX:ICI,NYMEX:M5F,NYMEX:MFF,NYMEX:MTF,NYMEX:QLD,NYMEX:QP,NYMEX:QXB,NYMEX:SSI,SGX:ACF",
                    "CLEAR:ALW,CLEAR:MTF,CLEAR:QP,CLEAR:QX,DCE:JM,ICEEUROPE:AFR,ICEEUROPE:ATW,ICEEUROPE:ILB,ICEEUROPE:NCF,ICEEUROPE:UCA,ICEEUROPE:UCP,ICEEUROPE:UCX,IFEU:AFO,IFEU:AFR,IFEU:ATD,IFEU:ATH,IFEU:ATW,IFEU:CRF,IFEU:GCF,IFEU:GNA,IFEU:GNO,IFEU:I42,IFEU:M42,IFEU:NCC,IFEU:NCF,IFEU:NWC,IFEU:NWD,IFEU:NWE,IFEU:NWF,IFEU:NWG,IFEU:RBC,IFEU:RBD,IFEU:RBE,IFEU:RBF,IFEU:RBG,IFEU:RCA,IFEU:RCO,IFEU:RDE,IFEU:RDF,IFEU:RDG,NYMEX:ACM,NYMEX:ACT,NYMEX:ALW,NYMEX:ICI,NYMEX:M5F,NYMEX:MFF,NYMEX:MTF,NYMEX:QLD,NYMEX:QP,NYMEX:QXB,NYMEX:SSI,SGX:ACF",
                    "CLEAR:ALW,CLEAR:MTF,CLEAR:QP,CLEAR:QX,DCE:JM,ICEEUROPE:AFR,ICEEUROPE:ATW,ICEEUROPE:ILB,ICEEUROPE:NCF,ICEEUROPE:UCA,ICEEUROPE:UCP,ICEEUROPE:UCX,IFEU:AFO,IFEU:AFR,IFEU:ATD,IFEU:ATH,IFEU:ATW,IFEU:CRF,IFEU:GCF,IFEU:GNA,IFEU:GNO,IFEU:I42,IFEU:M42,IFEU:NCC,IFEU:NCF,IFEU:NWC,IFEU:NWD,IFEU:NWE,IFEU:NWF,IFEU:NWG,IFEU:RBC,IFEU:RBD,IFEU:RBE,IFEU:RBF,IFEU:RBG,IFEU:RCA,IFEU:RCO,IFEU:RDE,IFEU:RDF,IFEU:RDG,NYMEX:ACM,NYMEX:ACT,NYMEX:ALW,NYMEX:ICI,NYMEX:M5F,NYMEX:MFF,NYMEX:MTF,NYMEX:QLD,NYMEX:QP,NYMEX:QXB,NYMEX:SSI,SGX:ACF",
                    "CLEAR:ALW,CLEAR:MTF,CLEAR:QP,CLEAR:QX,DCE:JM,ICEEUROPE:AFR,ICEEUROPE:ATW,ICEEUROPE:ILB,ICEEUROPE:NCF,ICEEUROPE:UCA,ICEEUROPE:UCP,ICEEUROPE:UCX,IFEU:AFO,IFEU:AFR,IFEU:ATD,IFEU:ATH,IFEU:ATW,IFEU:CRF,IFEU:GCF,IFEU:GNA,IFEU:GNO,IFEU:I42,IFEU:M42,IFEU:NCC,IFEU:NCF,IFEU:NWC,IFEU:NWD,IFEU:NWE,IFEU:NWF,IFEU:NWG,IFEU:RBC,IFEU:RBD,IFEU:RBE,IFEU:RBF,IFEU:RBG,IFEU:RCA,IFEU:RCO,IFEU:RDE,IFEU:RDF,IFEU:RDG,NYMEX:ACM,NYMEX:ACT,NYMEX:ALW,NYMEX:ICI,NYMEX:M5F,NYMEX:MFF,NYMEX:MTF,NYMEX:QLD,NYMEX:QP,NYMEX:QXB,NYMEX:SSI,SGX:ACF",
                    "CLEAR:ALW,CLEAR:MTF,CLEAR:QP,CLEAR:QX,DCE:JM,ICEEUROPE:AFR,ICEEUROPE:ATW,ICEEUROPE:ILB,ICEEUROPE:NCF,ICEEUROPE:UCA,ICEEUROPE:UCP,ICEEUROPE:UCX,IFEU:AFO,IFEU:AFR,IFEU:ATD,IFEU:ATH,IFEU:ATW,IFEU:CRF,IFEU:GCF,IFEU:GNA,IFEU:GNO,IFEU:I42,IFEU:M42,IFEU:NCC,IFEU:NCF,IFEU:NWC,IFEU:NWD,IFEU:NWE,IFEU:NWF,IFEU:NWG,IFEU:RBC,IFEU:RBD,IFEU:RBE,IFEU:RBF,IFEU:RBG,IFEU:RCA,IFEU:RCO,IFEU:RDE,IFEU:RDF,IFEU:RDG,NYMEX:ACM,NYMEX:ACT,NYMEX:ALW,NYMEX:ICI,NYMEX:M5F,NYMEX:MFF,NYMEX:MTF,NYMEX:QLD,NYMEX:QP,NYMEX:QXB,NYMEX:SSI,SGX:ACF",
                    "CLEAR:ALW,CLEAR:MTF,CLEAR:QP,CLEAR:QX,DCE:JM,ICEEUROPE:AFR,ICEEUROPE:ATW,ICEEUROPE:ILB,ICEEUROPE:NCF,ICEEUROPE:UCA,ICEEUROPE:UCP,ICEEUROPE:UCX,IFEU:AFO,IFEU:AFR,IFEU:ATD,IFEU:ATH,IFEU:ATW,IFEU:CRF,IFEU:GCF,IFEU:GNA,IFEU:GNO,IFEU:I42,IFEU:M42,IFEU:NCC,IFEU:NCF,IFEU:NWC,IFEU:NWD,IFEU:NWE,IFEU:NWF,IFEU:NWG,IFEU:RBC,IFEU:RBD,IFEU:RBE,IFEU:RBF,IFEU:RBG,IFEU:RCA,IFEU:RCO,IFEU:RDE,IFEU:RDF,IFEU:RDG,NYMEX:ACM,NYMEX:ACT,NYMEX:ALW,NYMEX:ICI,NYMEX:M5F,NYMEX:MFF,NYMEX:MTF,NYMEX:QLD,NYMEX:QP,NYMEX:QXB,NYMEX:SSI,SGX:ACF",
                    "CLEAR:ALW,CLEAR:MTF,CLEAR:QP,CLEAR:QX,DCE:JM,ICEEUROPE:AFR,ICEEUROPE:ATW,ICEEUROPE:ILB,ICEEUROPE:NCF,ICEEUROPE:UCA,ICEEUROPE:UCP,ICEEUROPE:UCX,IFEU:AFO,IFEU:AFR,IFEU:ATD,IFEU:ATH,IFEU:ATW,IFEU:CRF,IFEU:GCF,IFEU:GNA,IFEU:GNO,IFEU:I42,IFEU:M42,IFEU:NCC,IFEU:NCF,IFEU:NWC,IFEU:NWD,IFEU:NWE,IFEU:NWF,IFEU:NWG,IFEU:RBC,IFEU:RBD,IFEU:RBE,IFEU:RBF,IFEU:RBG,IFEU:RCA,IFEU:RCO,IFEU:RDE,IFEU:RDF,IFEU:RDG,NYMEX:ACM,NYMEX:ACT,NYMEX:ALW,NYMEX:ICI,NYMEX:M5F,NYMEX:MFF,NYMEX:MTF,NYMEX:QLD,NYMEX:QP,NYMEX:QXB,NYMEX:SSI,SGX:ACF",
                    "CLEAR:ALW,CLEAR:MTF,CLEAR:QP,CLEAR:QX,DCE:JM,ICEEUROPE:AFR,ICEEUROPE:ATW,ICEEUROPE:ILB,ICEEUROPE:NCF,ICEEUROPE:UCA,ICEEUROPE:UCP,ICEEUROPE:UCX,IFEU:AFO,IFEU:AFR,IFEU:ATD,IFEU:ATH,IFEU:ATW,IFEU:CRF,IFEU:GCF,IFEU:GNA,IFEU:GNO,IFEU:I42,IFEU:M42,IFEU:NCC,IFEU:NCF,IFEU:NWC,IFEU:NWD,IFEU:NWE,IFEU:NWF,IFEU:NWG,IFEU:RBC,IFEU:RBD,IFEU:RBE,IFEU:RBF,IFEU:RBG,IFEU:RCA,IFEU:RCO,IFEU:RDE,IFEU:RDF,IFEU:RDG,NYMEX:ACM,NYMEX:ACT,NYMEX:ALW,NYMEX:ICI,NYMEX:M5F,NYMEX:MFF,NYMEX:MTF,NYMEX:QLD,NYMEX:QP,NYMEX:QXB,NYMEX:SSI,SGX:ACF",
                    "CLEAR:ALW,CLEAR:MTF,CLEAR:QP,CLEAR:QX,DCE:JM,ICEEUROPE:AFR,ICEEUROPE:ATW,ICEEUROPE:ILB,ICEEUROPE:NCF,ICEEUROPE:UCA,ICEEUROPE:UCP,ICEEUROPE:UCX,IFEU:AFO,IFEU:AFR,IFEU:ATD,IFEU:ATH,IFEU:ATW,IFEU:CRF,IFEU:GCF,IFEU:GNA,IFEU:GNO,IFEU:I42,IFEU:M42,IFEU:NCC,IFEU:NCF,IFEU:NWC,IFEU:NWD,IFEU:NWE,IFEU:NWF,IFEU:NWG,IFEU:RBC,IFEU:RBD,IFEU:RBE,IFEU:RBF,IFEU:RBG,IFEU:RCA,IFEU:RCO,IFEU:RDE,IFEU:RDF,IFEU:RDG,NYMEX:ACM,NYMEX:ACT,NYMEX:ALW,NYMEX:ICI,NYMEX:M5F,NYMEX:MFF,NYMEX:MTF,NYMEX:QLD,NYMEX:QP,NYMEX:QXB,NYMEX:SSI,SGX:ACF",
                    "CLEAR:ALW,CLEAR:MTF,CLEAR:QP,CLEAR:QX,DCE:JM,ICEEUROPE:AFR,ICEEUROPE:ATW,ICEEUROPE:ILB,ICEEUROPE:NCF,ICEEUROPE:UCA,ICEEUROPE:UCP,ICEEUROPE:UCX,IFEU:AFO,IFEU:AFR,IFEU:ATD,IFEU:ATH,IFEU:ATW,IFEU:CRF,IFEU:GCF,IFEU:GNA,IFEU:GNO,IFEU:I42,IFEU:M42,IFEU:NCC,IFEU:NCF,IFEU:NWC,IFEU:NWD,IFEU:NWE,IFEU:NWF,IFEU:NWG,IFEU:RBC,IFEU:RBD,IFEU:RBE,IFEU:RBF,IFEU:RBG,IFEU:RCA,IFEU:RCO,IFEU:RDE,IFEU:RDF,IFEU:RDG,NYMEX:ACM,NYMEX:ACT,NYMEX:ALW,NYMEX:ICI,NYMEX:M5F,NYMEX:MFF,NYMEX:MTF,NYMEX:QLD,NYMEX:QP,NYMEX:QXB,NYMEX:SSI,SGX:ACF",
                    "CLEAR:ALW,CLEAR:MTF,CLEAR:QP,CLEAR:QX,DCE:JM,ICEEUROPE:AFR,ICEEUROPE:ATW,ICEEUROPE:ILB,ICEEUROPE:NCF,ICEEUROPE:UCA,ICEEUROPE:UCP,ICEEUROPE:UCX,IFEU:AFO,IFEU:AFR,IFEU:ATD,IFEU:ATH,IFEU:ATW,IFEU:CRF,IFEU:GCF,IFEU:GNA,IFEU:GNO,IFEU:I42,IFEU:M42,IFEU:NCC,IFEU:NCF,IFEU:NWC,IFEU:NWD,IFEU:NWE,IFEU:NWF,IFEU:NWG,IFEU:RBC,IFEU:RBD,IFEU:RBE,IFEU:RBF,IFEU:RBG,IFEU:RCA,IFEU:RCO,IFEU:RDE,IFEU:RDF,IFEU:RDG,NYMEX:ACM,NYMEX:ACT,NYMEX:ALW,NYMEX:ICI,NYMEX:M5F,NYMEX:MFF,NYMEX:MTF,NYMEX:QLD,NYMEX:QP,NYMEX:QXB,NYMEX:SSI,SGX:ACF",
                    "CLEAR:ALW,CLEAR:MTF,CLEAR:QP,CLEAR:QX,DCE:JM,ICEEUROPE:AFR,ICEEUROPE:ATW,ICEEUROPE:ILB,ICEEUROPE:NCF,ICEEUROPE:UCA,ICEEUROPE:UCP,ICEEUROPE:UCX,IFEU:AFO,IFEU:AFR,IFEU:ATD,IFEU:ATH,IFEU:ATW,IFEU:CRF,IFEU:GCF,IFEU:GNA,IFEU:GNO,IFEU:I42,IFEU:M42,IFEU:NCC,IFEU:NCF,IFEU:NWC,IFEU:NWD,IFEU:NWE,IFEU:NWF,IFEU:NWG,IFEU:RBC,IFEU:RBD,IFEU:RBE,IFEU:RBF,IFEU:RBG,IFEU:RCA,IFEU:RCO,IFEU:RDE,IFEU:RDF,IFEU:RDG,NYMEX:ACM,NYMEX:ACT,NYMEX:ALW,NYMEX:ICI,NYMEX:M5F,NYMEX:MFF,NYMEX:MTF,NYMEX:QLD,NYMEX:QP,NYMEX:QXB,NYMEX:SSI,SGX:ACF",
                    "CLEAR:ALW,CLEAR:MTF,CLEAR:QP,CLEAR:QX,DCE:JM,ICEEUROPE:AFR,ICEEUROPE:ATW,ICEEUROPE:ILB,ICEEUROPE:NCF,ICEEUROPE:UCA,ICEEUROPE:UCP,ICEEUROPE:UCX,IFEU:AFO,IFEU:AFR,IFEU:ATD,IFEU:ATH,IFEU:ATW,IFEU:CRF,IFEU:GCF,IFEU:GNA,IFEU:GNO,IFEU:I42,IFEU:M42,IFEU:NCC,IFEU:NCF,IFEU:NWC,IFEU:NWD,IFEU:NWE,IFEU:NWF,IFEU:NWG,IFEU:RBC,IFEU:RBD,IFEU:RBE,IFEU:RBF,IFEU:RBG,IFEU:RCA,IFEU:RCO,IFEU:RDE,IFEU:RDF,IFEU:RDG,NYMEX:ACM,NYMEX:ACT,NYMEX:ALW,NYMEX:ICI,NYMEX:M5F,NYMEX:MFF,NYMEX:MTF,NYMEX:QLD,NYMEX:QP,NYMEX:QXB,NYMEX:SSI,SGX:ACF",
                    "CLEAR:ALW,CLEAR:MTF,CLEAR:QP,CLEAR:QX,DCE:JM,ICEEUROPE:AFR,ICEEUROPE:ATW,ICEEUROPE:ILB,ICEEUROPE:NCF,ICEEUROPE:UCA,ICEEUROPE:UCP,ICEEUROPE:UCX,IFEU:AFO,IFEU:AFR,IFEU:ATD,IFEU:ATH,IFEU:ATW,IFEU:CRF,IFEU:GCF,IFEU:GNA,IFEU:GNO,IFEU:I42,IFEU:M42,IFEU:NCC,IFEU:NCF,IFEU:NWC,IFEU:NWD,IFEU:NWE,IFEU:NWF,IFEU:NWG,IFEU:RBC,IFEU:RBD,IFEU:RBE,IFEU:RBF,IFEU:RBG,IFEU:RCA,IFEU:RCO,IFEU:RDE,IFEU:RDF,IFEU:RDG,NYMEX:ACM,NYMEX:ACT,NYMEX:ALW,NYMEX:ICI,NYMEX:M5F,NYMEX:MFF,NYMEX:MTF,NYMEX:QLD,NYMEX:QP,NYMEX:QXB,NYMEX:SSI,SGX:ACF",
                    "CLEAR:ALW,CLEAR:MTF,CLEAR:QP,CLEAR:QX,DCE:JM,ICEEUROPE:AFR,ICEEUROPE:ATW,ICEEUROPE:ILB,ICEEUROPE:NCF,ICEEUROPE:UCA,ICEEUROPE:UCP,ICEEUROPE:UCX,IFEU:AFO,IFEU:AFR,IFEU:ATD,IFEU:ATH,IFEU:ATW,IFEU:CRF,IFEU:GCF,IFEU:GNA,IFEU:GNO,IFEU:I42,IFEU:M42,IFEU:NCC,IFEU:NCF,IFEU:NWC,IFEU:NWD,IFEU:NWE,IFEU:NWF,IFEU:NWG,IFEU:RBC,IFEU:RBD,IFEU:RBE,IFEU:RBF,IFEU:RBG,IFEU:RCA,IFEU:RCO,IFEU:RDE,IFEU:RDF,IFEU:RDG,NYMEX:ACM,NYMEX:ACT,NYMEX:ALW,NYMEX:ICI,NYMEX:M5F,NYMEX:MFF,NYMEX:MTF,NYMEX:QLD,NYMEX:QP,NYMEX:QXB,NYMEX:SSI,SGX:ACF",
                    "CLEAR:ALW,CLEAR:MTF,CLEAR:QP,CLEAR:QX,DCE:JM,ICEEUROPE:AFR,ICEEUROPE:ATW,ICEEUROPE:ILB,ICEEUROPE:NCF,ICEEUROPE:UCA,ICEEUROPE:UCP,ICEEUROPE:UCX,IFEU:AFO,IFEU:AFR,IFEU:ATD,IFEU:ATH,IFEU:ATW,IFEU:CRF,IFEU:GCF,IFEU:GNA,IFEU:GNO,IFEU:I42,IFEU:M42,IFEU:NCC,IFEU:NCF,IFEU:NWC,IFEU:NWD,IFEU:NWE,IFEU:NWF,IFEU:NWG,IFEU:RBC,IFEU:RBD,IFEU:RBE,IFEU:RBF,IFEU:RBG,IFEU:RCA,IFEU:RCO,IFEU:RDE,IFEU:RDF,IFEU:RDG,NYMEX:ACM,NYMEX:ACT,NYMEX:ALW,NYMEX:ICI,NYMEX:M5F,NYMEX:MFF,NYMEX:MTF,NYMEX:QLD,NYMEX:QP,NYMEX:QXB,NYMEX:SSI,SGX:ACF",
                    "CLEAR:ALW,CLEAR:MTF,CLEAR:QP,CLEAR:QX,DCE:JM,ICEEUROPE:AFR,ICEEUROPE:ATW,ICEEUROPE:ILB,ICEEUROPE:NCF,ICEEUROPE:UCA,ICEEUROPE:UCP,ICEEUROPE:UCX,IFEU:AFO,IFEU:AFR,IFEU:ATD,IFEU:ATH,IFEU:ATW,IFEU:CRF,IFEU:GCF,IFEU:GNA,IFEU:GNO,IFEU:I42,IFEU:M42,IFEU:NCC,IFEU:NCF,IFEU:NWC,IFEU:NWD,IFEU:NWE,IFEU:NWF,IFEU:NWG,IFEU:RBC,IFEU:RBD,IFEU:RBE,IFEU:RBF,IFEU:RBG,IFEU:RCA,IFEU:RCO,IFEU:RDE,IFEU:RDF,IFEU:RDG,NYMEX:ACM,NYMEX:ACT,NYMEX:ALW,NYMEX:ICI,NYMEX:M5F,NYMEX:MFF,NYMEX:MTF,NYMEX:QLD,NYMEX:QP,NYMEX:QXB,NYMEX:SSI,SGX:ACF",
                    "CLEAR:ALW,CLEAR:MTF,CLEAR:QP,CLEAR:QX,DCE:JM,ICEEUROPE:AFR,ICEEUROPE:ATW,ICEEUROPE:ILB,ICEEUROPE:NCF,ICEEUROPE:UCA,ICEEUROPE:UCP,ICEEUROPE:UCX,IFEU:AFO,IFEU:AFR,IFEU:ATD,IFEU:ATH,IFEU:ATW,IFEU:CRF,IFEU:GCF,IFEU:GNA,IFEU:GNO,IFEU:I42,IFEU:M42,IFEU:NCC,IFEU:NCF,IFEU:NWC,IFEU:NWD,IFEU:NWE,IFEU:NWF,IFEU:NWG,IFEU:RBC,IFEU:RBD,IFEU:RBE,IFEU:RBF,IFEU:RBG,IFEU:RCA,IFEU:RCO,IFEU:RDE,IFEU:RDF,IFEU:RDG,NYMEX:ACM,NYMEX:ACT,NYMEX:ALW,NYMEX:ICI,NYMEX:M5F,NYMEX:MFF,NYMEX:MTF,NYMEX:QLD,NYMEX:QP,NYMEX:QXB,NYMEX:SSI,SGX:ACF",
                ],
                "Business Category": [
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    "Upstream",
                    "Upstream",
                    "Upstream",
                    "Upstream",
                    "Upstream",
                    "Upstream",
                    "Upstream",
                    "Upstream",
                    "Midstream",
                    "Midstream",
                    "Midstream",
                    "Midstream",
                    "Midstream",
                    "Midstream",
                    "Midstream",
                    "Midstream",
                    "Midstream",
                    "Midstream",
                    "Midstream",
                    "Midstream",
                    "Midstream",
                    "Midstream",
                    "Midstream",
                    "Midstream",
                    "Midstream",
                    "Midstream",
                    "Midstream",
                    "Midstream",
                    "Midstream",
                    "Midstream",
                    "Midstream",
                    "Midstream",
                    "Midstream",
                    "Midstream",
                    "Midstream",
                    "Midstream",
                    "Midstream",
                    "Midstream",
                    "Midstream",
                    "Midstream",
                    "Midstream",
                    "Midstream",
                    "Midstream",
                    "Midstream",
                    "Midstream",
                    "Midstream",
                    "Midstream",
                    "Midstream",
                    "Midstream",
                    "Midstream",
                    "Midstream",
                    "Midstream",
                    "Midstream",
                    "Midstream",
                    "Midstream",
                    "Midstream",
                    "Midstream",
                    "Midstream",
                    "Midstream",
                    "Midstream",
                    "Midstream",
                    "Midstream",
                    "Midstream",
                    "Midstream",
                    "Midstream",
                    "Midstream",
                    "Midstream",
                    "Midstream",
                    "Midstream",
                    "Midstream",
                    "Upstream",
                    "Upstream",
                    "Upstream",
                    "Upstream",
                    "Upstream",
                    "Upstream",
                    "Upstream",
                    "Upstream",
                    "Upstream",
                    "Upstream",
                    "Upstream",
                    "Upstream",
                    "Upstream",
                    "Upstream",
                    "Upstream",
                    "Upstream",
                    "Upstream",
                    "Upstream",
                    "Upstream",
                    "Upstream",
                    "Upstream",
                    "Upstream",
                    "Upstream",
                    "Upstream",
                    "Upstream",
                ],
                "is_alive": [
                    True,
                    True,
                    True,
                    True,
                    True,
                    True,
                    True,
                    True,
                    True,
                    True,
                    True,
                    True,
                    True,
                    True,
                    True,
                    True,
                    True,
                    True,
                    True,
                    True,
                    True,
                    True,
                    True,
                    True,
                    True,
                    True,
                    True,
                    True,
                    True,
                    True,
                    True,
                    True,
                    True,
                    True,
                    True,
                    True,
                    True,
                    True,
                    True,
                    True,
                    True,
                    True,
                    True,
                    True,
                    True,
                    True,
                    True,
                    True,
                    True,
                    False,
                    True,
                    True,
                    True,
                    True,
                    True,
                    True,
                    True,
                    True,
                    True,
                    True,
                    True,
                    True,
                    True,
                    True,
                    True,
                    True,
                    True,
                    True,
                    True,
                    True,
                    True,
                    True,
                    False,
                    False,
                    False,
                    False,
                    True,
                    True,
                    True,
                    False,
                    True,
                    True,
                    True,
                    True,
                    True,
                    True,
                    True,
                    True,
                    True,
                    True,
                    True,
                    True,
                    True,
                    True,
                    True,
                    True,
                    True,
                    True,
                    True,
                    True,
                ],
                "source_code": [
                    "EIA",
                    "EIA",
                    "EIA",
                    "EIA",
                    "EIA",
                    "WIND",
                    "WIND",
                    "WIND",
                    "WIND",
                    "WIND",
                    "WIND",
                    "WIND",
                    "WIND",
                    "WIND",
                    "WIND",
                    "WIND",
                    "WIND",
                    "WIND",
                    "WIND",
                    "WIND",
                    "WIND",
                    "WIND",
                    "WIND",
                    "WIND",
                    "WIND",
                    "WIND",
                    "WIND",
                    "WIND",
                    "WIND",
                    "WIND",
                    "WIND",
                    "WIND",
                    "WIND",
                    "WIND",
                    "WIND",
                    "WIND",
                    "WIND",
                    "WIND",
                    "WIND",
                    "WIND",
                    "WIND",
                    "WIND",
                    "WIND",
                    "WIND",
                    "WIND",
                    "WIND",
                    "WIND",
                    "WIND",
                    "WIND",
                    "WIND",
                    "WIND",
                    "WIND",
                    "WIND",
                    "WIND",
                    "WIND",
                    "WIND",
                    "WIND",
                    "WIND",
                    "WIND",
                    "WIND",
                    "WIND",
                    "WIND",
                    "WIND",
                    "WIND",
                    "WIND",
                    "WIND",
                    "WIND",
                    "WIND",
                    "WIND",
                    "WIND",
                    "WIND",
                    "WIND",
                    "WIND",
                    "WIND",
                    "WIND",
                    "WIND",
                    "WIND",
                    "WIND",
                    "WIND",
                    "WIND",
                    "WIND",
                    "WIND",
                    "WIND",
                    "WIND",
                    "WIND",
                    "WIND",
                    "WIND",
                    "WIND",
                    "WIND",
                    "WIND",
                    "WIND",
                    "WIND",
                    "WIND",
                    "WIND",
                    "WIND",
                    "WIND",
                    "WIND",
                    "WIND",
                    "WIND",
                    "WIND",
                ],
                "dataset_code": [
                    "INTL",
                    "INTL",
                    "INTL",
                    "INTL",
                    "INTL",
                    "Deutsche Bundesbank",
                    "Deutsche Bundesbank",
                    "Banque de France",
                    "Banque de France",
                    "Bank of Spain",
                    "Bank of Spain",
                    "Bank of Italy",
                    "Bank of Italy",
                    "Shanghai Futures Exchange",
                    "Shanghai Futures Exchange",
                    "Shanghai Futures Exchange",
                    "Shanghai Futures Exchange",
                    "Shanghai Futures Exchange",
                    "Shanghai Futures Exchange",
                    "Shanghai Futures Exchange",
                    "Shanghai Futures Exchange",
                    "Shanghai Futures Exchange",
                    "Shanghai Futures Exchange",
                    "Shanghai Futures Exchange",
                    "Shanghai Futures Exchange",
                    "COMEX",
                    "COMEX",
                    "COMEX",
                    "COMEX",
                    "COMEX",
                    "COMEX",
                    "COMEX",
                    "COMEX",
                    "CME",
                    "Shanghai Gold Exchange",
                    "Shanghai Gold Exchange",
                    "Shanghai Gold Exchange",
                    "Shanghai Gold Exchange",
                    "Shanghai Gold Exchange",
                    "Shanghai Gold Exchange",
                    "Shanghai Gold Exchange",
                    "Shanghai Gold Exchange",
                    "Shanghai Gold Exchange",
                    "Shanghai Gold Exchange",
                    "Shanghai Gold Exchange",
                    "Shanghai Gold Exchange",
                    "According to the Press Finishing",
                    "According to the Press Finishing",
                    "According to the Press Finishing",
                    "Company Website",
                    "Company Website",
                    "Company Website",
                    "According to the Press Finishing",
                    "According to the Press Finishing",
                    "spdrgoldshares.com",
                    "spdrgoldshares.com",
                    "spdrgoldshares.com",
                    "Wind",
                    "Wind",
                    "Wind",
                    "Wind",
                    "Wind",
                    "Wind",
                    "Wind",
                    "Wind",
                    "Wind",
                    "Wind",
                    "Wind",
                    "Wind",
                    "Wind",
                    "Wind",
                    "Wind",
                    "Wind",
                    "Wind",
                    "Wind",
                    "According to the Press Finishing",
                    "According to the Press Finishing",
                    "National Bureau of Statistics of China",
                    "Wind",
                    "Wind",
                    "Wind",
                    "Wind",
                    "Wind",
                    "Wind",
                    "Wind",
                    "Wind",
                    "Wind",
                    "Wind",
                    "Wind",
                    "Wind",
                    "Wind",
                    "Wind",
                    "Wind",
                    "Wind",
                    "Wind",
                    "Wind",
                    "Wind",
                    "Wind",
                    "Wind",
                    "Wind",
                ],
                "series_code": [
                    "1-8-ABW-MMTCD.A",
                    "1-8-ALB-MMTCD.A",
                    "1-8-ARE-MMTCD.A",
                    "1-8-ARG-MMTCD.A",
                    "1-8-ARM-MMTCD.A",
                    "G0008063",
                    "SG000S6E",
                    "G0008146",
                    "G1400003",
                    "G2700068",
                    "G2700075",
                    "G1700018",
                    "G1700020",
                    "M0066358",
                    "S0068142",
                    "S0147027",
                    "S0031868",
                    "S0181376",
                    "M00G6409",
                    "M00G6410",
                    "M00G6411",
                    "M0096581",
                    "M00096614",
                    "S0049497",
                    "S0049505",
                    "S0069669",
                    "S0180903",
                    "S0147014",
                    "S01G0945",
                    "S01G0906",
                    "S01G094E",
                    "M00096642",
                    "M0096645",
                    "S0114145",
                    "S0035818",
                    "S0035819",
                    "S0035820",
                    "S0035821",
                    "S0202645",
                    "S0035824",
                    "S0035825",
                    "S0035826",
                    "S0035827",
                    "S5806075",
                    "S0182163",
                    "S0181748",
                    "S0031645",
                    "S0031646",
                    "S0031647",
                    "S5806366",
                    "S5806367",
                    "S5806365",
                    "S5801701",
                    "S5801702",
                    "S0105520",
                    "S0105521",
                    "S0105522",
                    "S5807688",
                    "S5807690",
                    "S5807691",
                    "S5807692",
                    "S5807693",
                    "S5807694",
                    "S5807695",
                    "S5807696",
                    "S5807697",
                    "S5808213",
                    "S5808214",
                    "S5808215",
                    "S5807698",
                    "S5807699",
                    "S5807700",
                    "S5807701",
                    "S5807702",
                    "S5807703",
                    "S0149035",
                    "S5801759",
                    "S5914487",
                    "S0033511",
                    "S5118432",
                    "S5118277",
                    "S5118276",
                    "S5118275",
                    "S5118273",
                    "S5118270",
                    "S5118267",
                    "S5118266",
                    "S5118264",
                    "S5118263",
                    "S5118260",
                    "S5118259",
                    "S5118258",
                    "S5118255",
                    "S5118254",
                    "S5118252",
                    "S5118247",
                    "S5118246",
                    "S5118245",
                    "S5118243",
                    "S5118241",
                ],
                "original_name": [
                    "Coal and coke CO2 emissions, Aruba, Annual — million metric tonnes carbon dioxide",
                    "Coal and coke CO2 emissions, Albania, Annual — million metric tonnes carbon dioxide",
                    "Coal and coke CO2 emissions, United Arab Emirates, Annual — million metric tonnes carbon dioxide",
                    "Coal and coke CO2 emissions, Argentina, Annual — million metric tonnes carbon dioxide",
                    "Coal and coke CO2 emissions, Armenia, Annual — million metric tonnes carbon dioxide",
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                ],
                "extracted_frequency": [
                    "Annual",
                    "Annual",
                    "Annual",
                    "Annual",
                    "Annual",
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                ],
                "is_downloaded": [
                    "success",
                    "success",
                    "success",
                    "success",
                    "success",
                    "success",
                    "not_attempted",
                    "success",
                    "success",
                    "success",
                    "success",
                    "success",
                    "success",
                    "success",
                    "success",
                    "success",
                    "success",
                    "success",
                    "not_attempted",
                    "not_attempted",
                    "not_attempted",
                    "success",
                    "not_attempted",
                    "success",
                    "success",
                    "success",
                    "success",
                    "success",
                    "not_attempted",
                    "not_attempted",
                    "not_attempted",
                    "not_attempted",
                    "success",
                    "success",
                    "success",
                    "success",
                    "success",
                    "success",
                    "success",
                    "success",
                    "success",
                    "success",
                    "success",
                    "success",
                    "success",
                    "success",
                    "success",
                    "success",
                    "success",
                    "not_attempted",
                    "success",
                    "success",
                    "success",
                    "success",
                    "success",
                    "success",
                    "success",
                    "success",
                    "success",
                    "success",
                    "success",
                    "success",
                    "success",
                    "success",
                    "success",
                    "success",
                    "success",
                    "success",
                    "success",
                    "success",
                    "success",
                    "success",
                    "success",
                    "success",
                    "success",
                    "not_attempted",
                    "success",
                    "success",
                    "success",
                    "success",
                    "success",
                    "success",
                    "success",
                    "success",
                    "success",
                    "success",
                    "success",
                    "success",
                    "success",
                    "success",
                    "success",
                    "success",
                    "success",
                    "success",
                    "success",
                    "success",
                    "success",
                    "success",
                    "success",
                    "success",
                ],
                "WIND Commodity": [
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    "Gold",
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                ],
                "Update": [
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    "2019-12-20",
                    "2019-12-20",
                    "2019-12-20",
                    "2019-12-20",
                    "2019-12-20",
                    "2019-12-20",
                    "2019-12-20",
                    "2019-12-20",
                    "2019-12-20",
                    "2019-12-20",
                    "2019-12-20",
                    "2019-12-20",
                    "2019-12-20",
                    "2019-12-20",
                    "2019-12-20",
                    "2019-12-20",
                    "2019-12-20",
                    "2019-12-20",
                    "2019-12-20",
                    "2019-12-20",
                    "2019-12-20",
                    "2019-12-20",
                    "2019-12-19",
                    "2019-12-20",
                    "2019-12-20",
                    "2019-12-20",
                    "2019-12-20",
                    "2019-12-20",
                    "2019-12-20",
                    "2019-12-20",
                    "2019-12-20",
                    "2019-12-20",
                    "2019-12-20",
                    "2019-12-20",
                    "2019-12-20",
                    "2019-12-20",
                    "2019-12-20",
                    "2019-12-20",
                    "2019-12-20",
                    "2019-12-20",
                    "2019-12-20",
                    "2019-12-20",
                    "2019-12-20",
                    "2019-12-20",
                    "2014-11-03",
                    "2019-12-20",
                    "2019-12-20",
                    "2019-12-20",
                    "2019-12-20",
                    "2019-12-20",
                    "2019-12-20",
                    "2019-12-20",
                    "2019-12-20",
                    "2019-12-20",
                    "2019-12-20",
                    "2019-12-20",
                    "2019-12-20",
                    "2019-12-20",
                    "2019-12-20",
                    "2019-12-20",
                    "2019-12-20",
                    "2019-12-20",
                    "2019-12-20",
                    "2019-12-20",
                    "2019-12-20",
                    "2019-12-20",
                    "2019-12-20",
                    "2019-10-31",
                    "2019-10-31",
                    "2019-10-31",
                    "2014-06-03",
                    "2019-12-24",
                    "2019-12-24",
                    "2019-12-24",
                    "2015-02-11",
                    "2019-12-24",
                    "2019-12-24",
                    "2019-12-24",
                    "2019-12-24",
                    "2019-12-24",
                    "2019-12-24",
                    "2019-12-24",
                    "2019-12-24",
                    "2019-12-24",
                    "2019-12-06",
                    "2019-12-24",
                    "2019-12-24",
                    "2019-12-24",
                    "2019-12-24",
                    "2019-12-24",
                    "2019-12-24",
                    "2019-12-24",
                    "2019-12-24",
                    "2019-12-24",
                    "2019-12-24",
                ],
                "id_is_broken": [
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    np.nan,
                    False,
                    True,
                    False,
                    False,
                    False,
                    False,
                    False,
                    False,
                    False,
                    False,
                    False,
                    False,
                    False,
                    True,
                    True,
                    True,
                    False,
                    True,
                    False,
                    False,
                    False,
                    False,
                    False,
                    True,
                    True,
                    True,
                    True,
                    False,
                    False,
                    False,
                    False,
                    False,
                    False,
                    False,
                    False,
                    False,
                    False,
                    False,
                    False,
                    False,
                    False,
                    False,
                    False,
                    False,
                    False,
                    False,
                    False,
                    False,
                    False,
                    False,
                    False,
                    False,
                    False,
                    False,
                    False,
                    False,
                    False,
                    False,
                    False,
                    False,
                    False,
                    False,
                    False,
                    False,
                    False,
                    False,
                    False,
                    False,
                    False,
                    False,
                    False,
                    False,
                    False,
                    False,
                    False,
                    False,
                    False,
                    False,
                    False,
                    False,
                    False,
                    False,
                    False,
                    False,
                    False,
                    False,
                    False,
                    False,
                    False,
                    False,
                    False,
                    False,
                    False,
                    False,
                    False,
                ],
            }
        )
        filters = {
            "Frequency": {"isin": {"values": ["Monthly", "Weekly", "Daily"]}},
            "source_code": {"isin": {"values": ["WIND"]}},
            "is_downloaded": {"isin": {"values": ["success"]}},
        }
        mode = "and"
        info = {
            "nrows": 100,
            "n_Frequency": 95,
            "perc_Frequency": "95 / 100 = 95.00%",
            "n_source_code": 95,
            "perc_source_code": "95 / 100 = 95.00%",
            "n_is_downloaded": 89,
            "perc_is_downloaded": "89 / 100 = 89.00%",
            "nrows_remaining": 84,
        }
        # Call function to test
        act = hdf.filter_data_by_method(
            data=data, filters=filters, mode=mode, info=info
        )
        act = hut.convert_df_to_string(act)
        act = str(act)
        # Check output
        self.check_string(act)


class Test_apply_nan_mode(hut.TestCase):
    @staticmethod
    def _get_series_with_nans(seed: int) -> pd.Series:
        date_range = {"start": "1/1/2010", "periods": 40, "freq": "M"}
        series = hut.get_random_df(
            num_cols=1,
            seed=seed,
            **date_range,
        )[0]
        series[:3] = np.nan
        series[-3:] = np.nan
        series[5:7] = np.nan
        return series

    def test1(self) -> None:
        """
        Test for `mode=leave_unchanged`.
        """
        series = self._get_series_with_nans(seed=1)
        actual = hdf.apply_nan_mode(series)
        actual_string = hut.convert_df_to_string(actual, index=True)
        self.check_string(actual_string)

    def test2(self) -> None:
        """
        Test for `mode="drop"`.
        """
        series = self._get_series_with_nans(seed=1)
        actual = hdf.apply_nan_mode(series, mode="drop")
        actual_string = hut.convert_df_to_string(actual, index=True)
        self.check_string(actual_string)

    def test3(self) -> None:
        """
        Test for `mode="ffill"`.
        """
        series = self._get_series_with_nans(seed=1)
        actual = hdf.apply_nan_mode(series, mode="ffill")
        actual_string = hut.convert_df_to_string(actual, index=True)
        self.check_string(actual_string)

    def test4(self) -> None:
        """
        Test for `mode="ffill_and_drop_leading"`.
        """
        series = self._get_series_with_nans(seed=1)
        actual = hdf.apply_nan_mode(series, mode="ffill_and_drop_leading")
        actual_string = hut.convert_df_to_string(actual, index=True)
        self.check_string(actual_string)

    def test5(self) -> None:
        """
        Test for `mode="fill_with_zero"`.
        """
        series = self._get_series_with_nans(seed=1)
        actual = hdf.apply_nan_mode(series, mode="fill_with_zero")
        actual_string = hut.convert_df_to_string(actual, index=True)
        self.check_string(actual_string)

    # Smoke test for empty input.
    def test6(self) -> None:
        series = pd.Series([])
        hdf.apply_nan_mode(series)


class Test_compute_points_per_year_for_given_freq(hut.TestCase):
    def test1(self) -> None:
        actual = hdf.compute_points_per_year_for_given_freq("T")
        np.testing.assert_equal(actual, 525780.125)

    def test2(self) -> None:
        actual = hdf.compute_points_per_year_for_given_freq("B")
        np.testing.assert_equal(actual, 260.875)

    def test3(self) -> None:
        actual = hdf.compute_points_per_year_for_given_freq("D")
        np.testing.assert_equal(actual, 365.25)

    def test4(self) -> None:
        actual = hdf.compute_points_per_year_for_given_freq("W")
        np.testing.assert_equal(actual, 52.25)

    def test5(self) -> None:
        actual = hdf.compute_points_per_year_for_given_freq("M")
        np.testing.assert_equal(actual, 12.0)

    def test6(self) -> None:
        actual = hdf.compute_points_per_year_for_given_freq("Y")
        np.testing.assert_equal(actual, 1.0)

    def test7(self) -> None:
        actual = hdf.compute_points_per_year_for_given_freq("0D")
        np.testing.assert_equal(actual, 0.0)
